{"version":3,"sources":["components/Modal/index.js","views/pages/network/agent-tree/index.js","../node_modules/webpack/buildin/module.js","components/Alert/index.js","../node_modules/tiny-warning/dist/tiny-warning.esm.js","components/DataTable/index.js","../node_modules/@mui/material/FormHelperText/formHelperTextClasses.js","../node_modules/@mui/material/FormHelperText/FormHelperText.js"],"names":["withOrientationChange","title","children","open","onClose","theme","isLandscape","useTheme","isMobileDevice","useMediaQuery","breakpoints","down","Modal","sx","overflowY","display","overflow","Grid","xs","sm","md","lg","id","MainCard","style","margin","position","top","left","transform","secondary","IconButton","onClick","Typography","AgentTree","dispatch","useDispatch","agentTree","useSelector","state","useState","pageNo","setPageNo","pageLimit","setPageLimit","openModal","setOpenModal","pageno","limit","requestData","setRequestData","prevRequestData","handlePrevious","length","getAgentTreeData","pop","options","filter","print","download","search","selectableRows","rowsPerPage","pagination","rowsPerPageOptions","serverSide","count","totalRecords","jumpToPage","onChangeRowsPerPage","page","onChangePage","columns","name","label","sort","customBodyRenderLite","dataIndex","customBodyRender","value","Tooltip","agentId","data","AGENT_ID","viewAgentData","parentAgentId","push","roleId","useEffect","Box","Button","startIcon","marginBottom","DataTable","status","Alert","message","msg","container","spacing","item","InputLabel","htmlFor","marginLeft","OutlinedInput","fullWidth","disabled","agentData","AGENT_NAME","AGENT_PHONE","AGENT_EMAIL","ADDRESS","justifyContent","float","variant","color","module","exports","webpackPolyfill","deprecate","paths","Object","defineProperty","enumerable","get","l","i","AlertComponent","alertStatus","setAlertStatus","alertMessage","setAlertMessage","severity","setSeverity","undefined","anchorOrigin","vertical","horizontal","autoHideDuration","backgroundColor","toString","warning","condition","getFormHelperTextUtilityClasses","slot","generateUtilityClass","formHelperTextClasses","generateUtilityClasses","_excluded","FormHelperTextRoot","styled","overridesResolver","props","styles","ownerState","root","size","capitalize","contained","filled","_extends","palette","text","typography","caption","textAlign","marginTop","marginRight","error","main","FormHelperText","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","focused","required","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"static/js/29.ac5d29d2.chunk.js","sourcesContent":["import propTypes from 'prop-types';\nimport { Modal, IconButton, useMediaQuery, useTheme, Grid, Typography } from '@mui/material';\nimport MainCard from '../../ui-component/cards/MainCard';\nimport { IconX as CloseIcon } from '@tabler/icons';\nimport { withOrientationChange } from 'react-device-detect';\n\nfunction ModalComponent({ title, children, open, onClose, isLandscape }) {\n    const theme = useTheme();\n    const isMobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <>\n            <Modal\n                open={open}\n                onClose={onClose}\n                sx={{\n                    overflowY: 'auto',\n                    display: 'block',\n                    overflow: 'scroll'\n                }}\n            >\n                <Grid xs={6} sm={6} md={6} lg={6} id=\"modal-card\">\n                    <MainCard\n                        title={title}\n                        style={{\n                            margin: 0,\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            transform: 'translate(-50%, -50%)'\n                        }}\n                        secondary={\n                            <IconButton onClick={onClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        }\n                    >\n                        {children}\n                        <Typography>{isMobileDevice}</Typography>\n                    </MainCard>\n                </Grid>\n            </Modal>\n        </>\n    );\n}\nModalComponent.propTypes = {\n    title: propTypes.string.isRequired,\n    open: propTypes.string.isRequired,\n    onClose: propTypes.func.isRequired,\n    children: propTypes.any.isRequired\n};\n\nexport default withOrientationChange(ModalComponent);\n","import { useState, useEffect } from 'react';\nimport { IconButton, Box, Typography, Button, InputLabel, OutlinedInput, FormControl, Grid, Tooltip } from '@mui/material';\nimport { IconCaretRight as NextIcon, IconInfoCircle as ViewInfoIcon, IconCaretLeft as PrevIcon } from '@tabler/icons';\n\n// Components\nimport MainCard from '../../../../ui-component/cards/MainCard';\nimport DataTable from 'components/DataTable';\n\nimport { useTheme } from '@mui/system';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAgentTreeData, viewAgentData } from 'store/thunk/network/agentTree.thunk';\nimport AlertComponent from 'components/Alert';\nimport Modal from 'components/Modal';\n\nfunction AgentTree() {\n    const dispatch = useDispatch();\n    const agentTree = useSelector((state) => state.agentTree);\n    const [pageNo, setPageNo] = useState(0);\n    const [pageLimit, setPageLimit] = useState(10);\n    const [openModal, setOpenModal] = useState(false);\n\n    const [requestData, setRequestData] = useState({ pageno: pageNo, limit: pageLimit });\n    const [prevRequestData, setPrevRequestData] = useState([]);\n\n    const handleNext = (parentAgentId) => {\n        prevRequestData.push(requestData);\n        dispatch(getAgentTreeData({ ...requestData, roleId: parentAgentId }));\n        setRequestData({ ...requestData, roleId: parentAgentId });\n    };\n\n    const handlePrevious = () => {\n        if (prevRequestData.length > 0) {\n            dispatch(getAgentTreeData(prevRequestData[prevRequestData.length - 1]));\n            prevRequestData.pop();\n        }\n    };\n\n    const handleView = (agentId) => {\n        setOpenModal(!openModal);\n        dispatch(viewAgentData({ agentId: agentId }));\n    };\n\n    const options = {\n        filter: false,\n        print: false,\n        download: false,\n        search: false,\n        selectableRows: false,\n        rowsPerPage: pageLimit,\n        pagination: true,\n        rowsPerPageOptions: [10, 20, 30],\n        serverSide: true,\n        count: agentTree.totalRecords,\n        jumpToPage: true,\n        onChangeRowsPerPage: (page) => {\n            setPageLimit(page);\n        },\n        onChangePage: (page) => {\n            setPageNo(page);\n        }\n    };\n\n    const columns = [\n        {\n            name: 'dataindex',\n            label: 'SR NO',\n            options: {\n                filter: false,\n                sort: true,\n                customBodyRenderLite: (dataIndex) => {\n                    const val = dataIndex + 1 + pageLimit * pageNo;\n                    return val;\n                }\n            }\n        },\n        {\n            name: 'ROLE_NAME',\n            label: 'ROLE',\n            options: {\n                filter: false,\n                sort: true,\n                customBodyRender: (value) => {\n                    return <Typography>{value}</Typography>;\n                }\n            }\n        },\n        {\n            name: 'AGENT_USERNAME',\n            label: 'USERNAME',\n            options: {\n                filter: false,\n                sort: true,\n                customBodyRender: (value) => {\n                    return <Typography>{value}</Typography>;\n                }\n            }\n        },\n        {\n            name: 'PLAYERS',\n            label: 'PLAYERS',\n            options: {\n                filter: false,\n                sort: true,\n                customBodyRender: (value) => <Typography>0</Typography>\n            }\n        },\n        {\n            name: 'MAGESTIC_COINS',\n            label: 'MAJESTIC COINS',\n            options: {\n                filter: false,\n                sort: true,\n                customBodyRender: (value) => <Typography>0</Typography>\n            }\n        },\n        {\n            name: 'MAGESTIC_POINTS',\n            label: 'MAJESTIC DIAMONDS',\n            options: {\n                filter: false,\n                sort: true,\n                customBodyRender: (value) => <Typography>0</Typography>\n            }\n        },\n        {\n            name: 'action',\n            label: 'Action',\n            options: {\n                filter: false,\n                sort: true,\n                customBodyRenderLite: (dataIndex) => {\n                    return (\n                        <>\n                            <Tooltip title=\"View Info\">\n                                <IconButton onClick={() => handleView(agentTree.data[dataIndex].AGENT_ID)}>\n                                    <ViewInfoIcon />\n                                </IconButton>\n                            </Tooltip>\n                            {prevRequestData.length > 0 && (\n                                <Tooltip title=\"Previous\">\n                                    <IconButton>\n                                        <PrevIcon onClick={handlePrevious} />\n                                    </IconButton>\n                                </Tooltip>\n                            )}\n                            <Tooltip title=\"Next\">\n                                <IconButton onClick={() => handleNext(agentTree.data[dataIndex].AGENT_ID)}>\n                                    <NextIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </>\n                    );\n                }\n            }\n        }\n    ];\n\n    useEffect(() => {\n        dispatch(getAgentTreeData(requestData));\n    }, []);\n\n    return (\n        <Box>\n            <MainCard title=\"Agent Tree\">\n                <Box>\n                    {prevRequestData.length > 0 ? (\n                        <Button startIcon={<PrevIcon />} style={{ marginBottom: 10 }} onClick={handlePrevious}>\n                            Previous Data\n                        </Button>\n                    ) : (\n                        <Box />\n                    )}\n                    <DataTable title=\"Agent Types\" data={agentTree.data} columns={columns} options={options} />\n                </Box>\n            </MainCard>\n\n            {agentTree.status === 'failed' && <AlertComponent status=\"false\" message={agentTree.msg} />}\n            {agentTree.status === 'success' && <AlertComponent status=\"true\" message={agentTree.msg} />}\n\n            <Modal title=\"Agent Data\" open={openModal} onClose={() => setOpenModal(!openModal)}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <InputLabel htmlFor=\"name\" style={{ marginLeft: 5 }}>\n                            Name\n                        </InputLabel>\n                        <OutlinedInput fullWidth id=\"name\" label=\"Name\" disabled value={agentTree.agentData.AGENT_NAME} />\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <InputLabel htmlFor=\"phone\" style={{ marginLeft: 5 }}>\n                            Phone No\n                        </InputLabel>\n                        <OutlinedInput fullWidth id=\"phone\" label=\"Phone No\" disabled value={agentTree.agentData.AGENT_PHONE} />\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <InputLabel htmlFor=\"email\" style={{ marginLeft: 5 }}>\n                            Email\n                        </InputLabel>\n                        <OutlinedInput fullWidth id=\"email\" label=\"Email\" disabled value={agentTree.agentData.AGENT_EMAIL} />\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <InputLabel htmlFor=\"address\" style={{ marginLeft: 5 }}>\n                            Address\n                        </InputLabel>\n                        <OutlinedInput fullWidth id=\"address\" disabled value={agentTree.agentData.ADDRESS} />\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Button\n                            style={{ display: 'flex', justifyContent: 'right', float: 'right' }}\n                            onClick={() => setOpenModal(!openModal)}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                        >\n                            Cancel\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Modal>\n        </Box>\n    );\n}\n\nexport default AgentTree;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { Box, Alert, Snackbar } from '@mui/material';\nimport { useEffect, useState } from 'react';\n\nfunction AlertComponent({ status, message }) {\n    const [alertStatus, setAlertStatus] = useState(false);\n    const [alertMessage, setAlertMessage] = useState('');\n    const [severity, setSeverity] = useState('error');\n\n    useEffect(() => {\n        if (status !== undefined || (status !== null && message !== undefined) || message !== null) {\n            setAlertStatus(!alertStatus);\n            setAlertMessage(message);\n            setSeverity(status === 'true' ? 'success' : 'error');\n        }\n    }, [status, message]);\n\n    return (\n        <Box>\n            <Snackbar\n                open={alertStatus}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                autoHideDuration={4000}\n                onClose={() => setAlertStatus(!alertStatus)}\n            >\n                <Alert severity={severity} style={{ backgroundColor: status === 'true' ? 'green' : 'red', color: 'white' }} id=\"alert\">\n                    {alertMessage.toString()}\n                </Alert>\n            </Snackbar>\n        </Box>\n    );\n}\n\nexport default AlertComponent;\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","import propTypes from 'prop-types';\nimport MUIDataTable from 'mui-datatables';\nimport { Box } from '@mui/material';\n\nfunction DataTable({ title, data, columns, options }) {\n    return (\n        <Box>\n            <MUIDataTable title={title} data={data} columns={columns} options={options} id=\"datatable\" />\n        </Box>\n    );\n}\n\nDataTable.propTypes = {\n    title: propTypes.string.isRequired,\n    data: propTypes.array.isRequired,\n    columns: propTypes.array.isRequired,\n    options: propTypes.array.isRequired\n};\n\nexport default DataTable;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getFormHelperTextUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormHelperText', slot);\n}\nconst formHelperTextClasses = generateUtilityClasses('MuiFormHelperText', ['root', 'error', 'disabled', 'sizeSmall', 'sizeMedium', 'contained', 'focused', 'filled', 'required']);\nexport default formHelperTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport formHelperTextClasses, { getFormHelperTextUtilityClasses } from './formHelperTextClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    contained,\n    size,\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', size && `size${capitalize(size)}`, contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClasses, classes);\n};\n\nconst FormHelperTextRoot = styled('p', {\n  name: 'MuiFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size && styles[`size${capitalize(ownerState.size)}`], ownerState.contained && styles.contained, ownerState.filled && styles.filled];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, theme.typography.caption, {\n  textAlign: 'left',\n  marginTop: 3,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  [`&.${formHelperTextClasses.disabled}`]: {\n    color: theme.palette.text.disabled\n  },\n  [`&.${formHelperTextClasses.error}`]: {\n    color: theme.palette.error.main\n  }\n}, ownerState.size === 'small' && {\n  marginTop: 4\n}, ownerState.contained && {\n  marginLeft: 14,\n  marginRight: 14\n}));\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormHelperText'\n  });\n\n  const {\n    children,\n    className,\n    component = 'p'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n\n  const ownerState = _extends({}, props, {\n    component,\n    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',\n    variant: fcs.variant,\n    size: fcs.size,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children === ' ' ?\n    /*#__PURE__*/\n    // notranslate needed while Google Translate will not fix zero-width space issue\n    // eslint-disable-next-line react/no-danger\n    _jsx(\"span\", {\n      className: \"notranslate\",\n      dangerouslySetInnerHTML: {\n        __html: '&#8203;'\n      }\n    }) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormHelperText;"],"sourceRoot":""}