{"version":3,"sources":["schema/changePassword.schema.js","views/pages/changePassword/index.js","components/Alert/index.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"names":["PASSWORD_REGEX","changePasswordSchema","yup","shape","password","min","max","matches","required","confirm_password","oneOf","ChangePassword","userdata","JSON","parse","localStorage","getItem","useState","status","msg","res","setRes","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","formik","useFormik","initialValues","validationSchema","onSubmit","values","changePassword","email","AGENT_EMAIL","a","requestOptions","method","headers","body","stringify","AGENT_PASSWORD","fetch","API_URL","InternalAPI","PASSWORDCHANGE","response","json","result","setTimeout","Box","MainCard","title","noValidate","handleSubmit","onReset","handleBlur","Grid","container","spacing","direction","item","sm","Typography","variant","style","letterSpacing","fontWeight","fontSize","FormControl","fullWidth","error","touched","Boolean","errors","InputLabel","htmlFor","OutlinedInput","type","value","name","onChange","handleChange","onBlur","id","label","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","FormHelperText","float","padding","Button","startIcon","color","marginRight","marginLeft","Alert","message","AlertComponent","alertStatus","setAlertStatus","alertMessage","setAlertMessage","severity","setSeverity","useEffect","undefined","open","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","backgroundColor","toString","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","inputAdornmentClasses","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","disablePointerEvents","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","palette","action","active","positionStart","hiddenLabel","marginTop","pointerEvents","React","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","Provider","as","clsx","_jsxs","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"static/js/31.e65eeb33.chunk.js","sourcesContent":["import * as yup from 'yup';\n\nconst PASSWORD_REGEX = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,15}$/;\n\nconst changePasswordSchema = yup.object().shape({\n    password: yup\n        .string()\n        .min(8, 'Password should be minimum 8 characters long')\n        .max(150, 'Password should be maximum 150 Characters')\n        .matches(PASSWORD_REGEX, 'Password must include uppercase, lowercase, number and special symbol')\n        .required('Please enter the password'),\n    confirm_password: yup\n        .string()\n        .min(8, 'Password should be min 8 characters')\n        .max(15, 'Password should be max 15 characters')\n        .matches(PASSWORD_REGEX, 'Password must include uppercase, lowercase, number and special symbol')\n        .required('Please enter the password')\n        .oneOf([yup.ref('password')], 'Password and confirm password does not match')\n});\n\nexport default changePasswordSchema;\n","import {\n    Box,\n    Button,\n    TextField,\n    Grid,\n    OutlinedInput,\n    FormControl,\n    InputLabel,\n    Typography,\n    FormHelperText,\n    InputAdornment,\n    IconButton\n} from '@mui/material';\nimport { IconLock as ChangePasswordIcon, IconX as CancelIcon } from '@tabler/icons';\nimport { API_URL, InternalAPI } from 'common/constants';\nimport AlertComponent from 'components/Alert';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\nimport changePasswordSchema from 'schema/changePassword.schema';\n\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\n// Components\n\nimport MainCard from 'ui-component/cards/MainCard';\n\nfunction ChangePassword() {\n    const { userdata } = JSON.parse(localStorage.getItem('MAJESTIC_CASINO'));\n\n    const [res, setRes] = useState({ status: null, msg: '' });\n    const [showPassword, setShowPassword] = useState(false);\n\n    // HANDLE SHOW PASSWORD\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n            confirm_password: ''\n        },\n        validationSchema: changePasswordSchema,\n        onSubmit: (values) => {\n            changePassword({ email: userdata.AGENT_EMAIL, password: values.password });\n        }\n    });\n\n    // CHANGE USER PASSWORD\n    const changePassword = async ({ email, password }) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ AGENT_EMAIL: email, AGENT_PASSWORD: password })\n        };\n        const response = await fetch(`${API_URL}${InternalAPI.PASSWORDCHANGE}`, requestOptions);\n        if (response.status === 200) {\n            const result = await response.json();\n            if (result.status === true) {\n                setRes({ ...res, status: 'success', msg: result.msg });\n            } else {\n                setRes({ status: 'failed', msg: result.msg });\n            }\n            setTimeout(() => {\n                setRes({ status: null, msg: '' });\n            }, 2000);\n        }\n    };\n    return (\n        <Box>\n            <MainCard title=\"Change Password\">\n                <Box>\n                    <form noValidate onSubmit={formik.handleSubmit} onReset={formik.handleBlur}>\n                        <Grid container spacing={2} direction=\"column\">\n                            <Grid item>\n                                <Grid container spacing={2} direction=\"column\">\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"paragraph\" style={{ letterSpacing: 1, fontWeight: 900, fontSize: 15 }}>\n                                            Email: {userdata.AGENT_EMAIL}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <FormControl fullWidth error={formik.touched.password && Boolean(formik.errors.password)}>\n                                            <InputLabel htmlFor=\"new_password\">New Password</InputLabel>\n                                            <OutlinedInput\n                                                type={showPassword ? 'text' : 'password'}\n                                                value={formik.password}\n                                                name=\"password\"\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                                id=\"new_password\"\n                                                label=\"New password\"\n                                                fullWidth\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <IconButton\n                                                            aria-label=\"toggle password visibility\"\n                                                            onClick={handleClickShowPassword}\n                                                            onMouseDown={handleMouseDownPassword}\n                                                            edge=\"end\"\n                                                            size=\"large\"\n                                                        >\n                                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                            {formik.touched.password && formik.errors.password && (\n                                                <FormHelperText id=\"question-error\">{formik.errors.password}</FormHelperText>\n                                            )}\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item>\n                                        <FormControl\n                                            fullWidth\n                                            error={formik.touched.confirm_password && Boolean(formik.errors.confirm_password)}\n                                        >\n                                            <InputLabel htmlFor=\"confirm_password\">Confirm Password</InputLabel>\n                                            <OutlinedInput\n                                                type={showPassword ? 'text' : 'password'}\n                                                value={formik.confirm_password}\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                                name=\"confirm_password\"\n                                                id=\"confirm_password\"\n                                                label=\"Confirm password\"\n                                                fullWidth\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <IconButton\n                                                            aria-label=\"toggle password visibility\"\n                                                            onClick={handleClickShowPassword}\n                                                            onMouseDown={handleMouseDownPassword}\n                                                            edge=\"end\"\n                                                            size=\"large\"\n                                                        >\n                                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                            {formik.touched.confirm_password && formik.errors.confirm_password && (\n                                                <FormHelperText id=\"question-error\">{formik.errors.confirm_password}</FormHelperText>\n                                            )}\n                                        </FormControl>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Box style={{ float: 'right', padding: 5 }}>\n                                    <Button\n                                        type=\"reset\"\n                                        startIcon={<CancelIcon />}\n                                        variant=\"contained\"\n                                        color=\"error\"\n                                        style={{ marginRight: 5 }}\n                                    >\n                                        Reset\n                                    </Button>\n                                    <Button\n                                        startIcon={<ChangePasswordIcon />}\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        style={{ marginLeft: 5 }}\n                                        type=\"submit\"\n                                    >\n                                        Change Password\n                                    </Button>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Box>\n            </MainCard>\n\n            {res.status === 'failed' && <AlertComponent status=\"false\" message={res.msg} />}\n            {res.status === 'success' && <AlertComponent status=\"true\" message={res.msg} />}\n        </Box>\n    );\n}\n\nexport default ChangePassword;\n","import { Box, Alert, Snackbar } from '@mui/material';\nimport { useEffect, useState } from 'react';\n\nfunction AlertComponent({ status, message }) {\n    const [alertStatus, setAlertStatus] = useState(false);\n    const [alertMessage, setAlertMessage] = useState('');\n    const [severity, setSeverity] = useState('error');\n\n    useEffect(() => {\n        if (status !== undefined || (status !== null && message !== undefined) || message !== null) {\n            setAlertStatus(!alertStatus);\n            setAlertMessage(message);\n            setSeverity(status === 'true' ? 'success' : 'error');\n        }\n    }, [status, message]);\n\n    return (\n        <Box>\n            <Snackbar\n                open={alertStatus}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                autoHideDuration={4000}\n                onClose={() => setAlertStatus(!alertStatus)}\n            >\n                <Alert severity={severity} style={{ backgroundColor: status === 'true' ? 'green' : 'red', color: 'white' }} id=\"alert\">\n                    {alertMessage.toString()}\n                </Alert>\n            </Snackbar>\n        </Box>\n    );\n}\n\nexport default AlertComponent;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: theme.palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /*#__PURE__*/\n\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n\n        /* eslint-disable-next-line react/no-danger */\n        _jsx(\"span\", {\n          className: \"notranslate\",\n          dangerouslySetInnerHTML: {\n            __html: '&#8203;'\n          }\n        }) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"sourceRoot":""}