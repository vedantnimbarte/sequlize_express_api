{"version":3,"sources":["schema/notification.schema.js","views/pages/cms/notification/index.js","../node_modules/webpack/buildin/global.js","../node_modules/@mui/material/IconButton/iconButtonClasses.js","components/NotFoundCard/index.js","../node_modules/@mui/material/Dialog/DialogContext.js","components/DataTable/index.js","../node_modules/@mui/material/Dialog/dialogClasses.js","components/FullScreenDialog/index.js","../node_modules/@mui/material/IconButton/IconButton.js","components/ResponsiveModal/index.js","../node_modules/@mui/material/Dialog/Dialog.js"],"names":["SUPPORTED_FILETYPES","notificationSchema","yup","shape","type","oneOf","required","title","max","message","url","when","is","then","image","test","value","includes","Notification","useState","openModal","setOpenModal","theme","useTheme","isMobileDevice","useMediaQuery","breakpoints","down","menupermission","JSON","parse","localStorage","getItem","pageUrl","window","location","href","split","menuPermissions","filter","permission","MENU_SLUG","length","data","Box","MainCard","secondary","ISNEW","Tooltip","Button","startIcon","onClick","variant","color","fullWidth","style","marginBottom","ISVIEW","DataTable","columns","options","print","download","search","selectableRows","rowsPerPage","rowsPerPageOptions","NotFoundCard","msg","open","onClose","display","flexDirection","initialValues","validationSchema","onSubmit","values","console","log","formik","noValidate","handleSubmit","InputLabel","id","TextField","select","onChange","handleChange","onBlur","handleBlur","name","error","touched","Boolean","errors","helperText","MenuItem","label","margin","multiline","rows","justifyContent","float","palette","light","paddingLeft","paddingRight","disabled","isValid","dirty","g","this","Function","e","module","exports","getIconButtonUtilityClass","slot","generateUtilityClass","iconButtonClasses","generateUtilityClasses","height","alignItems","fontWeight","fontSize","DialogContext","createContext","getDialogUtilityClass","dialogClasses","Transition","props","ref","direction","TransitionComponent","React","forwardRef","FullScreenDialog","children","dialogStatus","setDialogStatus","fullScreen","sx","position","backgroundColor","ml","flex","edge","padding","_excluded","IconButtonRoot","styled","ButtonBase","overridesResolver","styles","ownerState","root","capitalize","size","_extends","textAlign","typography","pxToRem","borderRadius","overflow","action","active","transition","transitions","create","duration","shortest","alpha","hoverOpacity","marginLeft","marginRight","main","IconButton","inProps","useThemeProps","className","disableFocusRipple","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","centerRipple","focusRipple","withOrientationChange","isLandscape","isTablet","toString","overflowY","xs","sm","md","lg","top","left","transform","isIOS","DialogBackdrop","Backdrop","overrides","backdrop","zIndex","DialogRoot","Modal","DialogContainer","container","scroll","outline","overflowX","content","verticalAlign","width","DialogPaper","Paper","paper","String","maxWidth","paperFullWidth","paperFullScreen","boxShadow","maxHeight","unit","Math","paperScrollBody","defaultTransitionDuration","enter","enteringScreen","exit","leavingScreen","Dialog","ariaDescribedby","ariaLabelledbyProp","BackdropComponent","BackdropProps","disableEscapeKeyDown","onBackdropClick","PaperComponent","PaperProps","Fade","transitionDuration","TransitionProps","backdropClick","ariaLabelledby","useId","dialogContextValue","titleId","as","closeAfterTransition","event","current","appear","in","timeout","role","onMouseDown","target","currentTarget","elevation","Provider"],"mappings":"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","file":"static/js/25.c267f68b.chunk.js","sourcesContent":["import * as yup from 'yup';\n\nconst NOTIFICATION_TYPE = ['text', 'image', 'video'];\nconst SUPPORTED_FILETYPES = ['image/jpeg', 'image/png'];\n\nconst notificationSchema = yup.object().shape({\n    type: yup\n        .mixed()\n        .oneOf([...NOTIFICATION_TYPE])\n        .required('Please select notification type'),\n    title: yup.string().max(255, 'Notification title shoule be maximum 255 characters').required('Please enter the notification title'),\n    message: yup.string().max(1024, 'Message should be maximum 1024 characters').required('Please enter the notification message'),\n    url: yup.string().when('type', {\n        is: 'video',\n        then: yup.string().url().max(255, 'Video URL should be maximum 255 characters').required('Please enter video url')\n    }),\n    image: yup.mixed().when('type', {\n        is: 'image',\n        then: yup\n            .mixed()\n            .required('Please select image')\n            .test(\n                'filetype',\n                'Only .jpg, .jpeg, .png files are supported',\n                (value) => !value || (value && SUPPORTED_FILETYPES.includes(value.type))\n            )\n    })\n});\n\nexport default notificationSchema;\n","import { useState } from 'react';\nimport { Tooltip, Box, Button, MenuItem, TextField, InputLabel, useTheme, useMediaQuery } from '@mui/material';\nimport { IconCirclePlus as AddIcon, IconDeviceFloppy as SaveIcon, IconRefresh as ResetIcon, IconX as CancelIcon } from '@tabler/icons';\n\nimport { Formik, Form } from 'formik';\n\n// Components\nimport DataTable from 'components/DataTable';\nimport Modal from 'components/ResponsiveModal';\nimport MainCard from '../../../../ui-component/cards/MainCard';\nimport NotFoundCard from 'components/NotFoundCard';\n\nimport notificationSchema from 'schema/notification.schema';\n\nfunction Notification() {\n    const [openModal, setOpenModal] = useState(false);\n\n    const theme = useTheme();\n    const isMobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const { menupermission } = JSON.parse(localStorage.getItem('MAJESTIC_CASINO'));\n\n    const pageUrl = window.location.href.split('/');\n    const menuPermissions = menupermission.filter(\n        (permission) => permission.MENU_SLUG === `/${pageUrl[pageUrl.length - 2]}/${pageUrl[pageUrl.length - 1]}`\n    )[0];\n\n    const columns = ['ID', 'Format', 'Title', 'Message', 'Image', 'Video URL', 'Action'];\n\n    const data = [];\n\n    const options = {\n        filter: false,\n        print: false,\n        download: false,\n        search: false,\n        selectableRows: false,\n        rowsPerPage: 10,\n        rowsPerPageOptions: [10, 20]\n    };\n\n    return (\n        <Box>\n            <MainCard\n                title={!isMobileDevice && 'Notification'}\n                secondary={\n                    menuPermissions.ISNEW ? (\n                        <Tooltip title=\"Add New Slider\">\n                            <Button startIcon={<AddIcon />} onClick={() => setOpenModal(!openModal)} variant=\"contained\" color=\"secondary\">\n                                Add Notification\n                            </Button>\n                        </Tooltip>\n                    ) : null\n                }\n            >\n                {isMobileDevice && menuPermissions.ISNEW && (\n                    <>\n                        <Button\n                            startIcon={<AddIcon />}\n                            fullWidth\n                            style={{ marginBottom: 15 }}\n                            onClick={() => setOpenModal(!openModal)}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                        >\n                            Add Notification\n                        </Button>\n                    </>\n                )}\n                <Box>\n                    {data.length > 0 && menuPermissions.ISVIEW ? (\n                        <DataTable title=\"Games List\" data={data} columns={columns} options={options} />\n                    ) : (\n                        <NotFoundCard msg=\"Sorry, No data found\" />\n                    )}\n                </Box>\n            </MainCard>\n\n            <Modal title=\"Add New Notification\" open={openModal} onClose={() => setOpenModal(!openModal)}>\n                <Box style={{ display: 'flex', flexDirection: 'column' }}>\n                    <Formik\n                        initialValues={{ type: 'text', title: '', message: '', image: '', url: '' }}\n                        validationSchema={notificationSchema}\n                        onSubmit={(values) => {\n                            console.log(values);\n                        }}\n                    >\n                        {(formik) => (\n                            <Form noValidate onSubmit={formik.handleSubmit}>\n                                <InputLabel id=\"type\">Select Notification Type</InputLabel>\n                                <TextField\n                                    select\n                                    value={formik.values.type}\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    name=\"type\"\n                                    fullWidth\n                                    error={formik.touched.type && Boolean(formik.errors.type)}\n                                    helperText={formik.touched.type && formik.errors.type}\n                                >\n                                    <MenuItem value=\"text\">Text</MenuItem>\n                                    <MenuItem value=\"image\">Image</MenuItem>\n                                    <MenuItem value=\"video\">Video</MenuItem>\n                                </TextField>\n                                <TextField\n                                    value={formik.values.title}\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    variant=\"outlined\"\n                                    name=\"title\"\n                                    label=\"Title\"\n                                    fullWidth\n                                    style={{ margin: '10px 0' }}\n                                    error={formik.touched.title && Boolean(formik.errors.title)}\n                                    helperText={formik.touched.title && formik.errors.title}\n                                />\n                                <TextField\n                                    value={formik.values.message}\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    multiline\n                                    rows={3}\n                                    variant=\"outlined\"\n                                    name=\"message\"\n                                    label=\"Message\"\n                                    fullWidth\n                                    style={{ margin: '10px 0' }}\n                                    error={formik.touched.message && Boolean(formik.errors.message)}\n                                    helperText={formik.touched.message && formik.errors.message}\n                                />\n                                {formik.values.type === 'image' && (\n                                    <Box style={{ margin: '10px 0' }}>\n                                        <InputLabel>Select Image</InputLabel>\n                                        <TextField\n                                            type=\"file\"\n                                            value={formik.values.image}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            error={formik.touched.image && Boolean(formik.errors.image)}\n                                            helperText={formik.touched.image && formik.errors.image}\n                                        />\n                                    </Box>\n                                )}\n                                {formik.values.type === 'video' && (\n                                    <TextField\n                                        type=\"url\"\n                                        value={formik.values.image}\n                                        onChange={formik.handleChange}\n                                        onBlur={formik.handleBlur}\n                                        variant=\"outlined\"\n                                        label=\"Video Url\"\n                                        fullWidth\n                                        style={{ margin: '10px 0' }}\n                                        error={formik.touched.url && Boolean(formik.errors.url)}\n                                        helperText={formik.touched.url && formik.errors.url}\n                                    />\n                                )}\n                                <Box style={{ display: 'flex', justifyContent: 'right', float: 'right' }}>\n                                    <Button\n                                        type=\"reset\"\n                                        onClick={() => setOpenModal(!openModal)}\n                                        variant=\"contained\"\n                                        color={theme.palette.secondary.light[800]}\n                                        style={{\n                                            margin: 10,\n                                            color: 'white',\n                                            paddingLeft: 20,\n                                            paddingRight: 20\n                                        }}\n                                        startIcon={!isMobileDevice && <CancelIcon />}\n                                    >\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        variant=\"contained\"\n                                        type=\"reset\"\n                                        color=\"error\"\n                                        style={{\n                                            color: '#fff',\n                                            margin: 10,\n                                            paddingLeft: 20,\n                                            paddingRight: 20\n                                        }}\n                                        startIcon={!isMobileDevice && <ResetIcon />}\n                                    >\n                                        Reset\n                                    </Button>\n                                    <Button\n                                        variant=\"contained\"\n                                        type=\"submit\"\n                                        color=\"secondary\"\n                                        style={{\n                                            color: '#fff',\n                                            margin: 10,\n                                            paddingLeft: 20,\n                                            paddingRight: 20\n                                        }}\n                                        startIcon={!isMobileDevice && <SaveIcon />}\n                                        disabled={!(formik.isValid && formik.dirty)}\n                                    >\n                                        Submit\n                                    </Button>\n                                </Box>\n                            </Form>\n                        )}\n                    </Formik>\n                </Box>\n            </Modal>\n        </Box>\n    );\n}\n\nexport default Notification;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","import { Paper, Typography } from '@mui/material';\nimport { IconFilesOff as NoDataIcon } from '@tabler/icons';\nimport propTypes from 'prop-types';\n\nfunction NotFoundCard({ msg }) {\n    return (\n        <Paper style={{ display: 'flex', height: 60, justifyContent: 'center', alignItems: 'center' }} fullWidth>\n            <NoDataIcon />\n            <Typography style={{ fontWeight: 900, fontSize: 20 }}>{msg}</Typography>\n        </Paper>\n    );\n}\n\nNotFoundCard.propTypes = {\n    msg: propTypes.string\n};\n\nexport default NotFoundCard;\n","import { createContext } from 'react';\nconst DialogContext = /*#__PURE__*/createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  DialogContext.displayName = 'DialogContext';\n}\n\nexport default DialogContext;","import propTypes from 'prop-types';\nimport MUIDataTable from 'mui-datatables';\nimport { Box } from '@mui/material';\n\nfunction DataTable({ title, data, columns, options }) {\n    return (\n        <Box>\n            <MUIDataTable title={title} data={data} columns={columns} options={options} id=\"datatable\" />\n        </Box>\n    );\n}\n\nDataTable.propTypes = {\n    title: propTypes.string.isRequired,\n    data: propTypes.array.isRequired,\n    columns: propTypes.array.isRequired,\n    options: propTypes.array.isRequired\n};\n\nexport default DataTable;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiDialog', slot);\n}\nconst dialogClasses = generateUtilityClasses('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);\nexport default dialogClasses;","import propTypes from 'prop-types';\nimport React from 'react';\nimport { Box, Typography, Dialog, AppBar, IconButton, Toolbar, Slide } from '@mui/material';\nimport { IconX as CloseIcon } from '@tabler/icons';\n\nconst Transition = (props, ref) => <Slide direction=\"up\" ref={ref} {...props} />;\nconst TransitionComponent = React.forwardRef(Transition);\n\nfunction FullScreenDialog({ title, children, dialogStatus, setDialogStatus }) {\n    return (\n        <Dialog\n            fullScreen\n            title={title}\n            open={dialogStatus}\n            TransitionComponent={TransitionComponent}\n            onClose={() => setDialogStatus(!dialogStatus)}\n        >\n            <>\n                <AppBar sx={{ position: 'relative', backgroundColor: 'white' }}>\n                    <Toolbar>\n                        <Typography sx={{ ml: 2, flex: 1 }} variant=\"h3\" color=\"#000\">\n                            {title}\n                        </Typography>\n                        <IconButton edge=\"start\" aria-label=\"close\" onClick={() => setDialogStatus(!dialogStatus)}>\n                            <CloseIcon color=\"black\" />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Box style={{ padding: 10 }}>{children}</Box>\n            </>\n        </Dialog>\n    );\n}\n\nFullScreenDialog.propTypes = {\n    title: propTypes.string,\n    children: propTypes.any,\n    dialogStatus: propTypes.bool,\n    setDialogStatus: propTypes.func\n};\n\nexport default FullScreenDialog;\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\n\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: theme.palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, ownerState.color !== 'inherit' && ownerState.color !== 'default' && {\n  color: theme.palette[ownerState.color].main,\n  '&:hover': {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.size === 'small' && {\n  padding: 5,\n  fontSize: theme.typography.pxToRem(18)\n}, ownerState.size === 'large' && {\n  padding: 12,\n  fontSize: theme.typography.pxToRem(28)\n}, {\n  [`&.${iconButtonClasses.disabled}`]: {\n    backgroundColor: 'transparent',\n    color: theme.palette.action.disabled\n  }\n}));\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n\n  const {\n    edge = false,\n    children,\n    className,\n    color = 'default',\n    disabled = false,\n    disableFocusRipple = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default IconButton;","import propTypes from 'prop-types';\nimport { Modal, IconButton, useMediaQuery, useTheme, Grid, Typography } from '@mui/material';\nimport MainCard from '../../ui-component/cards/MainCard';\nimport { IconX as CloseIcon } from '@tabler/icons';\nimport FullScreenDialog from 'components/FullScreenDialog';\nimport { BrowserView, MobileView, isIOS, isTablet, withOrientationChange } from 'react-device-detect';\n\nfunction ModalComponent({ title, children, open, onClose, isLandscape }) {\n    const theme = useTheme();\n    const isMobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n    // console.log(window.screen.orientation.angle);\n    return (\n        <>\n            {/* MOBILE VIEW / TABLET VIEW */}\n            <MobileView>\n                {/* Showing modal if device is tablet and it is in portrait mode */}\n                {isTablet && isLandscape.toString() === 'false' && (\n                    <Modal\n                        open={open}\n                        onClose={onClose}\n                        sx={{\n                            overflowY: 'auto',\n                            display: 'block',\n                            overflow: 'scroll'\n                        }}\n                    >\n                        <Grid xs={6} sm={6} md={6} lg={6}>\n                            <MainCard\n                                title={title}\n                                style={{\n                                    margin: 0,\n                                    position: 'absolute',\n                                    top: '50%',\n                                    left: '50%',\n                                    transform: 'translate(-50%, -50%)'\n                                }}\n                                secondary={\n                                    <IconButton onClick={onClose}>\n                                        <CloseIcon />\n                                    </IconButton>\n                                }\n                            >\n                                {children}\n                                <Typography>{isMobileDevice}</Typography>\n                            </MainCard>\n                        </Grid>\n                    </Modal>\n                )}\n\n                {/* Showing full screen dialog if device is tablet and in landscape mode */}\n                {isTablet && isLandscape && (\n                    <FullScreenDialog title={title} dialogStatus={open} setDialogStatus={onClose}>\n                        {children}\n                        <Typography>{isMobileDevice}</Typography>\n                    </FullScreenDialog>\n                )}\n\n                {/* Showing full screen dialog if device is mobile, mode can be portrait as well as landscape  */}\n                {!isTablet && (\n                    <FullScreenDialog title={title} dialogStatus={open} setDialogStatus={onClose}>\n                        {children}\n                        <Typography>{isMobileDevice}</Typography>\n                    </FullScreenDialog>\n                )}\n            </MobileView>\n\n            {/* BROWSER VIEW */}\n            <BrowserView>\n                {(!isIOS || !isTablet) && (\n                    <Modal\n                        open={open}\n                        onClose={onClose}\n                        sx={{\n                            overflowY: 'auto',\n                            display: 'block',\n                            overflow: 'scroll'\n                        }}\n                    >\n                        <Grid xs={6} sm={6} md={6} lg={6}>\n                            <MainCard\n                                title={title}\n                                style={{\n                                    margin: 0,\n                                    position: 'absolute',\n                                    top: '50%',\n                                    left: '50%',\n                                    transform: 'translate(-50%, -50%)'\n                                }}\n                                secondary={\n                                    <IconButton onClick={onClose}>\n                                        <CloseIcon />\n                                    </IconButton>\n                                }\n                            >\n                                {children}\n                                <Typography>{isMobileDevice}</Typography>\n                            </MainCard>\n                        </Grid>\n                    </Modal>\n                )}\n            </BrowserView>\n        </>\n    );\n}\nModalComponent.propTypes = {\n    title: propTypes.string.isRequired,\n    open: propTypes.string.isRequired,\n    onClose: propTypes.func.isRequired,\n    children: propTypes.any.isRequired\n};\n\nexport default withOrientationChange(ModalComponent);\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { unstable_useId as useId } from '@mui/utils';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport { duration } from '../styles/createTransitions';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport DialogContext from './DialogContext';\nimport Backdrop from '../Backdrop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DialogBackdrop = styled(Backdrop, {\n  name: 'MuiDialog',\n  slot: 'Backdrop',\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\n\nconst DialogRoot = styled(Modal, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = styled('div', {\n  name: 'MuiDialog',\n  slot: 'Container',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}, ownerState.scroll === 'body' && {\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  textAlign: 'center',\n  '&:after': {\n    content: '\"\"',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    height: '100%',\n    width: '0'\n  }\n}));\nconst DialogPaper = styled(Paper, {\n  name: 'MuiDialog',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize(ownerState.scroll)}`], styles[`paperWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  }\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  flexDirection: 'column',\n  maxHeight: 'calc(100% - 64px)'\n}, ownerState.scroll === 'body' && {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'left' // 'initial' doesn't work on IE11\n\n}, !ownerState.maxWidth && {\n  maxWidth: 'calc(100% - 64px)'\n}, ownerState.maxWidth === 'xs' && {\n  maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : `${theme.breakpoints.values.xs}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.maxWidth !== 'xs' && {\n  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: 'calc(100% - 64px)'\n}, ownerState.fullScreen && {\n  margin: 0,\n  width: '100%',\n  maxWidth: '100%',\n  height: '100%',\n  maxHeight: 'none',\n  borderRadius: 0,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: '100%'\n  }\n}));\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledbyProp,\n    BackdropComponent,\n    BackdropProps,\n    children,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return /*#__PURE__*/_jsx(DialogRoot, _extends({\n    className: clsx(classes.root, className),\n    BackdropProps: _extends({\n      transitionDuration,\n      as: BackdropComponent\n    }, BackdropProps),\n    closeAfterTransition: true,\n    BackdropComponent: DialogBackdrop,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState: ownerState,\n        children: /*#__PURE__*/_jsx(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx(classes.paper, PaperProps.className),\n          ownerState: ownerState,\n          children: /*#__PURE__*/_jsx(DialogContext.Provider, {\n            value: dialogContextValue,\n            children: children\n          })\n        }))\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;"],"sourceRoot":""}