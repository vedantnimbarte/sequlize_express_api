{"version":3,"sources":["views/pages/configuration/gamingPack/components/Cards/PackCard.js","schema/gamingPack.schema.js","views/pages/configuration/gamingPack/components/Forms/CreateGamePack.js","views/pages/configuration/gamingPack/components/Forms/UpdateGamePack.js","views/pages/configuration/gamingPack/components/Dialog/DeleteConfirmation.js","views/pages/configuration/gamingPack/index.js","components/NotFoundCard/index.js","components/Alert/index.js","components/FullScreenDialog/index.js","components/ResponsiveModal/index.js","../node_modules/@mui/material/DialogTitle/dialogTitleClasses.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","ui-component/cards/Skeleton/EarningCard.js"],"names":["CardWrapper","styled","MainCard","theme","data","overflow","position","height","content","width","background","palette","warning","dark","borderRadius","top","right","EarningCard","isLoading","handleEdit","dataIndex","handleDelete","ISUPDATE","ISDELETE","useTheme","elevation","Box","style","display","alignItems","justifyContent","size","IconButton","onClick","PACK_ID","color","sx","p","Grid","container","direction","item","border","borderColor","textAlign","marginBottom","padding","Typography","fontSize","fontWeight","id","PACK_NAME","ml","MAGESTIC_COINS","MAGESTIC_POINTS","BUY_AMOUNT","gamingPackSchema","yup","shape","name","max","required","coins","diamonds","price","discount","percentage","when","is","then","CreateGamePack","dispatch","isMobileDevice","openModal","setOpenModal","formik","useFormik","initialValues","validationSchema","onSubmit","values","createCoinPack","flexDirection","noValidate","handleSubmit","onReset","handleReset","FormControl","fullWidth","error","touched","Boolean","errors","InputLabel","htmlFor","OutlinedInput","value","type","label","onChange","handleChange","onBlur","handleBlur","variant","FormHelperText","min","float","Button","secondary","light","margin","paddingLeft","paddingRight","startIcon","disabled","isValid","dirty","UpdateGamePack","coinPack","updateCoinPack","useEffect","console","log","DeleteConfirmation","openDialog","setOpenDialog","coinPackId","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","deleteCoinPack","autoFocus","GamingPack","useDispatch","useSelector","state","useState","updateModal","setUpdateModal","setCoinPackId","dataIdx","setDataIdx","menupermission","JSON","parse","localStorage","getItem","pageUrl","window","location","href","split","filter","permission","MENU_SLUG","length","ISVIEW","useMediaQuery","breakpoints","down","getCoinPack","pageno","limit","handleUpdateModal","idx","setDataIndex","handleDeleteDialog","title","mx","spacing","map","pack_info","index","lg","md","sm","xs","PackCard","NotFoundCard","msg","status","Alert","message","AlertComponent","alertStatus","setAlertStatus","alertMessage","setAlertMessage","severity","setSeverity","undefined","anchorOrigin","vertical","horizontal","autoHideDuration","backgroundColor","toString","Transition","props","ref","TransitionComponent","React","forwardRef","FullScreenDialog","children","dialogStatus","setDialogStatus","fullScreen","flex","edge","withOrientationChange","isLandscape","isTablet","overflowY","left","transform","isIOS","getDialogTitleUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogTitleRoot","overridesResolver","styles","root","inProps","useThemeProps","className","idProp","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","DialogContext","titleId","_jsx","_extends","component","clsx","getDialogContentTextUtilityClass","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","composedClasses","my"],"mappings":"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","file":"static/js/28.13b07e66.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Box, Grid, Typography, IconButton, Chip } from '@mui/material';\nimport {\n    IconDiamond as DiamondsIcon,\n    IconCoin as CoinIcon,\n    IconCurrencyDollar as AmountIcon,\n    IconPencil as EditIcon,\n    IconTrash as DeleteIcon\n} from '@tabler/icons';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\n\nconst CardWrapper = styled(MainCard)(({ theme, data }) => ({\n    overflow: 'hidden',\n    position: 'relative',\n    // backgroundColor: theme.palette.warning.light,\n    height: '100%',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\n\nconst EarningCard = ({ isLoading, handleEdit, data, dataIndex, handleDelete, ISUPDATE, ISDELETE }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonEarningCard />\n            ) : (\n                <CardWrapper data={data} elevation={4}>\n                    <Box style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                        <Box size=\"2rem\" />\n\n                        <Box style={{ display: 'flex' }}>\n                            {ISUPDATE ? (\n                                <IconButton onClick={() => handleEdit(dataIndex)}>\n                                    <EditIcon />\n                                </IconButton>\n                            ) : null}\n                            {ISDELETE ? (\n                                <IconButton onClick={() => handleDelete(data.PACK_ID)}>\n                                    <DeleteIcon color=\"red\" />\n                                </IconButton>\n                            ) : null}\n                        </Box>\n                    </Box>\n                    <Box sx={{ p: 2.25 }}>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Box\n                                    style={{\n                                        border: '1px solid',\n                                        borderRadius: 5,\n                                        borderColor: theme.palette.warning.dark,\n                                        textAlign: 'center',\n                                        marginBottom: 40,\n                                        padding: 2\n                                    }}\n                                >\n                                    <Typography\n                                        style={{\n                                            fontSize: '3rem',\n                                            fontWeight: 500\n                                        }}\n                                        id=\"game-pack-title\"\n                                    >\n                                        {data.PACK_NAME}\n                                    </Typography>\n                                </Box>\n                            </Grid>\n                            <Grid item>\n                                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                    <CoinIcon />\n                                    <Typography\n                                        sx={{\n                                            fontSize: '2.5rem',\n                                            fontWeight: 500,\n                                            ml: 2\n                                        }}\n                                    >\n                                        {data.MAGESTIC_COINS}\n                                    </Typography>\n                                </Box>\n                            </Grid>\n                            <Grid item direction=\"row\">\n                                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                    <DiamondsIcon />\n                                    <Typography\n                                        sx={{\n                                            fontSize: '2.5rem',\n                                            fontWeight: 500,\n                                            ml: 2\n                                        }}\n                                    >\n                                        {data.MAGESTIC_POINTS}\n                                    </Typography>\n                                </Box>\n                            </Grid>\n                            <Grid item direction=\"row\">\n                                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                    <AmountIcon />\n                                    <Typography\n                                        sx={{\n                                            fontSize: '2.5rem',\n                                            fontWeight: 500,\n                                            ml: 2\n                                        }}\n                                    >\n                                        {data.BUY_AMOUNT}\n                                    </Typography>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nEarningCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default EarningCard;\n","import * as yup from 'yup';\n\nconst gamingPackSchema = yup.object().shape({\n    name: yup.string().max(50, 'Pack name should be maximum 100 characters only').required('Please enter pack name'),\n    coins: yup.number().required('Please enter coins amount'),\n    diamonds: yup.number().required('Please enter diamonds amount'),\n    price: yup.number().required('Please enter price'),\n    discount: yup.string().required('Please select the discount'),\n    percentage: yup.number().when('discount', { is: 'true', then: yup.number().required('Please enter the discount percentage') })\n});\n\nexport default gamingPackSchema;\n","import { Box, Button, MenuItem, OutlinedInput, FormHelperText, InputLabel, FormControl, Select } from '@mui/material';\nimport { IconDeviceFloppy as SaveIcon, IconRefresh as ResetIcon, IconX as CancelIcon } from '@tabler/icons';\nimport { useFormik } from 'formik';\nimport gamingPackSchema from 'schema/gamingPack.schema';\nimport { createCoinPack } from 'store/thunk/configuration/coinPack.thunk';\n\nfunction CreateGamePack({ dispatch, isMobileDevice, openModal, setOpenModal, theme }) {\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            coins: '',\n            diamonds: '',\n            price: '',\n            discount: false,\n            percentage: 0\n        },\n        validationSchema: gamingPackSchema,\n        onSubmit: (values) => {\n            dispatch(createCoinPack(values));\n            setOpenModal(!openModal);\n        }\n    });\n\n    return (\n        <Box style={{ display: 'flex', flexDirection: 'column' }}>\n            <form noValidate onSubmit={formik.handleSubmit} onReset={formik.handleReset}>\n                <FormControl fullWidth error={formik.touched.name && Boolean(formik.errors.name)} style={{ marginBottom: 10 }}>\n                    <InputLabel htmlFor=\"name\">Pack Name</InputLabel>\n                    <OutlinedInput\n                        value={formik.values.name}\n                        type=\"text\"\n                        id=\"name\"\n                        label=\"Pack Name\"\n                        name=\"name\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        variant=\"outlined\"\n                        fullWidth\n                        required\n                    />\n                    {formik.touched.name && formik.errors.name && (\n                        <FormHelperText error id=\"pack-name-error\">\n                            {formik.errors.name}\n                        </FormHelperText>\n                    )}\n                </FormControl>\n                <FormControl fullWidth error={formik.touched.coins && Boolean(formik.errors.coins)} style={{ marginBottom: 10 }}>\n                    <InputLabel htmlFor=\"coins\">Amount of Majestic Coins</InputLabel>\n                    <OutlinedInput\n                        value={formik.values.coins}\n                        type=\"number\"\n                        label=\"Amount of Majestic Coins\"\n                        name=\"coins\"\n                        id=\"coins\"\n                        min=\"0\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        variant=\"outlined\"\n                    />\n                    {formik.touched.coins && formik.errors.coins && <FormHelperText id=\"coins-error\">{formik.errors.coins}</FormHelperText>}\n                </FormControl>\n                <FormControl fullWidth error={formik.touched.diamonds && Boolean(formik.errors.diamonds)} style={{ marginBottom: 10 }}>\n                    <InputLabel htmlFor=\"diamonds\">Amount of Majestic Diamonds</InputLabel>\n                    <OutlinedInput\n                        value={formik.values.diamonds}\n                        type=\"number\"\n                        label=\"Amount of Majestic Diamonds\"\n                        name=\"diamonds\"\n                        id=\"diamonds\"\n                        min=\"0\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        variant=\"outlined\"\n                    />\n                    {formik.touched.diamonds && formik.errors.diamonds && (\n                        <FormHelperText id=\"diamonds-error\">{formik.errors.diamonds}</FormHelperText>\n                    )}\n                </FormControl>\n                <FormControl fullWidth error={formik.touched.price && Boolean(formik.errors.price)} style={{ marginBottom: 10 }}>\n                    <InputLabel htmlFor=\"price\">Price (in $)</InputLabel>\n                    <OutlinedInput\n                        value={formik.values.price}\n                        type=\"number\"\n                        label=\"Price (in $)\"\n                        name=\"price\"\n                        min=\"0\"\n                        id=\"price\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        variant=\"outlined\"\n                    />\n                    {formik.touched.price && formik.errors.price && <FormHelperText id=\"price-error\">{formik.errors.price}</FormHelperText>}\n                </FormControl>\n                {/* <FormControl fullWidth error={formik.touched.discount && Boolean(formik.errors.discount)} style={{ marginBottom: 10 }}>\n                    <InputLabel htmlFor=\"discount\">Discount</InputLabel>\n                    <Select\n                        value={formik.values.discount}\n                        select\n                        label=\"Discount\"\n                        name=\"discount\"\n                        id=\"discount\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        variant=\"outlined\"\n                        helperText={formik.touched.discount && formik.errors.discount}\n                    >\n                        <MenuItem value=\"true\">Discount</MenuItem>\n                        <MenuItem value=\"false\">No Discount</MenuItem>\n                    </Select>\n                </FormControl> */}\n                {/* {formik.values.discount === 'true' && (\n                    <FormControl\n                        fullWidth\n                        error={formik.touched.percentage && Boolean(formik.errors.percentage)}\n                        style={{ marginBottom: 10 }}\n                    >\n                        <InputLabel htmlFor=\"discount-percentage\">Discount Percentage</InputLabel>\n                        <OutlinedInput\n                            value={formik.values.percentage}\n                            type=\"number\"\n                            label=\"Discount Percentage\"\n                            name=\"percentage\"\n                            id=\"discount-percentage\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            variant=\"outlined\"\n                        />\n                        {formik.touched.percentage && formik.errors.percentage && (\n                            <FormHelperText id=\"discount-percentage-error\">{formik.errors.percentage}</FormHelperText>\n                        )}\n                    </FormControl>\n                )} */}\n\n                <Box style={{ display: 'flex', justifyContent: 'right', float: 'right' }}>\n                    <Button\n                        type=\"reset\"\n                        onClick={() => setOpenModal(!openModal)}\n                        variant=\"contained\"\n                        color={theme.palette.secondary.light[800]}\n                        style={{\n                            margin: 10,\n                            color: 'white',\n                            paddingLeft: 20,\n                            paddingRight: 20\n                        }}\n                        startIcon={!isMobileDevice && <CancelIcon />}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        type=\"reset\"\n                        color=\"error\"\n                        style={{\n                            color: '#fff',\n                            margin: 10,\n                            paddingLeft: 20,\n                            paddingRight: 20\n                        }}\n                        startIcon={!isMobileDevice && <ResetIcon />}\n                    >\n                        Reset\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        type=\"submit\"\n                        color=\"secondary\"\n                        style={{\n                            color: '#fff',\n                            margin: 10,\n                            paddingLeft: 20,\n                            paddingRight: 20\n                        }}\n                        startIcon={!isMobileDevice && <SaveIcon />}\n                        disabled={!(formik.isValid && formik.dirty)}\n                    >\n                        Submit\n                    </Button>\n                </Box>\n            </form>\n        </Box>\n    );\n}\n\nexport default CreateGamePack;\n","import { useEffect } from 'react';\nimport { Box, Button, MenuItem, OutlinedInput, FormHelperText, InputLabel, FormControl, Select } from '@mui/material';\nimport { IconDeviceFloppy as SaveIcon, IconRefresh as ResetIcon, IconX as CancelIcon } from '@tabler/icons';\nimport { useFormik } from 'formik';\nimport gamingPackSchema from 'schema/gamingPack.schema';\nimport { updateCoinPack } from 'store/thunk/configuration/coinPack.thunk';\n\nfunction UpdateGamePack({ coinPack, dispatch, isMobileDevice, openModal, setOpenModal, theme, dataIndex }) {\n    const formik = useFormik({\n        initialValues: {\n            name: coinPack.data[dataIndex].PACK_NAME || '',\n            coins: coinPack.data[dataIndex].MAGESTIC_COINS || '',\n            diamonds: coinPack.data[dataIndex].MAGESTIC_POINTS || '',\n            price: coinPack.data[dataIndex].BUY_AMOUNT || '',\n            discount: false,\n            percentage: 0,\n            id: coinPack.data[dataIndex].PACK_ID\n        },\n        validationSchema: gamingPackSchema,\n        onSubmit: (values) => {\n            dispatch(updateCoinPack(values));\n            setOpenModal(!openModal);\n        }\n    });\n\n    useEffect(() => {\n        console.log(formik);\n    }, [formik]);\n\n    return (\n        <Box style={{ display: 'flex', flexDirection: 'column' }}>\n            <form noValidate onSubmit={formik.handleSubmit}>\n                <FormControl fullWidth error={formik.touched.name && Boolean(formik.errors.name)} style={{ marginBottom: 10 }}>\n                    <InputLabel htmlFor=\"name\">Pack Name</InputLabel>\n                    <OutlinedInput\n                        value={formik.values.name}\n                        type=\"text\"\n                        id=\"name\"\n                        label=\"Pack Name\"\n                        name=\"name\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        variant=\"outlined\"\n                        fullWidth\n                        required\n                    />\n                    {formik.touched.name && formik.errors.name && (\n                        <FormHelperText error id=\"pack-name-error\">\n                            {formik.errors.name}\n                        </FormHelperText>\n                    )}\n                </FormControl>\n                <FormControl fullWidth error={formik.touched.coins && Boolean(formik.errors.coins)} style={{ marginBottom: 10 }}>\n                    <InputLabel htmlFor=\"coins\">Amount of Majestic Coins</InputLabel>\n                    <OutlinedInput\n                        value={formik.values.coins}\n                        type=\"number\"\n                        label=\"Amount of Majestic Coins\"\n                        name=\"coins\"\n                        id=\"coins\"\n                        min=\"0\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        variant=\"outlined\"\n                    />\n                    {formik.touched.coins && formik.errors.coins && <FormHelperText id=\"coins-error\">{formik.errors.coins}</FormHelperText>}\n                </FormControl>\n                <FormControl fullWidth error={formik.touched.diamonds && Boolean(formik.errors.diamonds)} style={{ marginBottom: 10 }}>\n                    <InputLabel htmlFor=\"diamonds\">Amount of Diamonds</InputLabel>\n                    <OutlinedInput\n                        value={formik.values.diamonds}\n                        type=\"number\"\n                        label=\"Amount of Diamonds\"\n                        name=\"diamonds\"\n                        id=\"diamonds\"\n                        min=\"0\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        variant=\"outlined\"\n                    />\n                    {formik.touched.diamonds && formik.errors.diamonds && (\n                        <FormHelperText id=\"diamonds-error\">{formik.errors.diamonds}</FormHelperText>\n                    )}\n                </FormControl>\n                <FormControl fullWidth error={formik.touched.price && Boolean(formik.errors.price)} style={{ marginBottom: 10 }}>\n                    <InputLabel htmlFor=\"price\">Price (in $)</InputLabel>\n                    <OutlinedInput\n                        value={formik.values.price}\n                        type=\"number\"\n                        label=\"Price (in $)\"\n                        name=\"price\"\n                        min=\"0\"\n                        id=\"price\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        variant=\"outlined\"\n                    />\n                    {formik.touched.price && formik.errors.price && <FormHelperText id=\"price-error\">{formik.errors.price}</FormHelperText>}\n                </FormControl>\n                {/* <FormControl fullWidth error={formik.touched.discount && Boolean(formik.errors.discount)} style={{ marginBottom: 10 }}>\n                    <InputLabel htmlFor=\"discount\">Discount</InputLabel>\n                    <Select\n                        value={formik.values.discount}\n                        select\n                        label=\"Discount\"\n                        name=\"discount\"\n                        id=\"discount\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        variant=\"outlined\"\n                        helperText={formik.touched.discount && formik.errors.discount}\n                    >\n                        <MenuItem value={true.toString()}>Discount</MenuItem>\n                        <MenuItem value={false.toString()}>No Discount</MenuItem>\n                    </Select>\n                </FormControl>\n                {formik.values.discount === 'true' && (\n                    <FormControl\n                        fullWidth\n                        error={formik.touched.percentage && Boolean(formik.errors.percentage)}\n                        style={{ marginBottom: 10 }}\n                    >\n                        <InputLabel htmlFor=\"discount-percentage\">Discount Percentage</InputLabel>\n                        <OutlinedInput\n                            value={formik.values.percentage}\n                            type=\"number\"\n                            label=\"Discount Percentage\"\n                            name=\"percentage\"\n                            id=\"discount-percentage\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            variant=\"outlined\"\n                        />\n                        {formik.touched.percentage && formik.errors.percentage && (\n                            <FormHelperText id=\"discount-percentage-error\">{formik.errors.percentage}</FormHelperText>\n                        )}\n                    </FormControl>\n                )} */}\n\n                <Box style={{ display: 'flex', justifyContent: 'right', float: 'right' }}>\n                    <Button\n                        type=\"reset\"\n                        onClick={() => setOpenModal(!openModal)}\n                        variant=\"contained\"\n                        color={theme.palette.secondary.light[800]}\n                        style={{\n                            margin: 10,\n                            color: 'white',\n                            paddingLeft: 20,\n                            paddingRight: 20\n                        }}\n                        startIcon={!isMobileDevice && <CancelIcon />}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        type=\"reset\"\n                        color=\"error\"\n                        style={{\n                            color: '#fff',\n                            margin: 10,\n                            paddingLeft: 20,\n                            paddingRight: 20\n                        }}\n                        startIcon={!isMobileDevice && <ResetIcon />}\n                    >\n                        Reset\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        type=\"submit\"\n                        color=\"secondary\"\n                        style={{\n                            color: '#fff',\n                            margin: 10,\n                            paddingLeft: 20,\n                            paddingRight: 20\n                        }}\n                        startIcon={!isMobileDevice && <SaveIcon />}\n                        disabled={!(formik.isValid && formik.dirty)}\n                    >\n                        Submit\n                    </Button>\n                </Box>\n            </form>\n        </Box>\n    );\n}\n\nexport default UpdateGamePack;\n","import { Dialog, DialogTitle, DialogContentText, DialogContent, Button, DialogActions } from '@mui/material';\nimport { deleteCoinPack } from 'store/thunk/configuration/coinPack.thunk';\n\nfunction DeleteConfirmation({ dispatch, openDialog, setOpenDialog, coinPackId }) {\n    return (\n        <Dialog\n            open={openDialog}\n            onClose={() => setOpenDialog(!openDialog)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">Delete Confirmation Window</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">Are you sure you want to delete?</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setOpenDialog(!openDialog)}>Disagree</Button>\n                <Button\n                    onClick={() => {\n                        dispatch(deleteCoinPack({ id: coinPackId }));\n                        setOpenDialog(!openDialog);\n                    }}\n                    autoFocus\n                >\n                    Agree\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default DeleteConfirmation;\n","import { useEffect, useState } from 'react';\nimport { Box, Button, Grid, useTheme, useMediaQuery } from '@mui/material';\nimport { IconCirclePlus as AddIcon } from '@tabler/icons';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\n// Components\nimport MainCard from '../../../../ui-component/cards/MainCard';\nimport Modal from 'components/ResponsiveModal';\nimport PackCard from './components/Cards/PackCard';\nimport CreateGamePack from './components/Forms/CreateGamePack';\nimport UpdateGamePack from './components/Forms/UpdateGamePack';\nimport NotFoundCard from 'components/NotFoundCard';\nimport { getCoinPack } from 'store/thunk/configuration/coinPack.thunk';\nimport AlertComponent from 'components/Alert';\nimport DeleteConfirmation from './components/Dialog/DeleteConfirmation';\nimport { setDataIndex } from 'store/reducers/configuration/coinPack.reducer';\n\nfunction GamingPack() {\n    const dispatch = useDispatch();\n    const coinPack = useSelector((state) => state.coinPack);\n    const [openModal, setOpenModal] = useState(false);\n    const [updateModal, setUpdateModal] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    const [coinPackId, setCoinPackId] = useState();\n    const [dataIdx, setDataIdx] = useState();\n\n    const { menupermission } = JSON.parse(localStorage.getItem('MAJESTIC_CASINO'));\n\n    const pageUrl = window.location.href.split('/');\n    const { ISVIEW, ISUPDATE, ISDELETE } = menupermission.filter(\n        (permission) => permission.MENU_SLUG === `/${pageUrl[pageUrl.length - 2]}/${pageUrl[pageUrl.length - 1]}`\n    )[0];\n\n    const theme = useTheme();\n    const isMobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n\n    useEffect(() => {\n        dispatch(getCoinPack({ pageno: 0, limit: 10 }));\n    }, []);\n\n    const handleUpdateModal = (idx) => {\n        setDataIdx(idx);\n        dispatch(setDataIndex(idx));\n        setUpdateModal(!updateModal);\n    };\n\n    const handleDeleteDialog = (id) => {\n        setCoinPackId(id);\n        setOpenDialog(!openDialog);\n    };\n\n    return (\n        <>\n            <Box>\n                <MainCard\n                    title=\"Coin Packs\"\n                    secondary={\n                        <Button\n                            startIcon={<AddIcon />}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            sx={{ mx: 3 }}\n                            onClick={() => setOpenModal(!openModal)}\n                            id=\"add-game-pack\"\n                        >\n                            Add Coin Pack\n                        </Button>\n                    }\n                >\n                    <Box>\n                        {coinPack.data.length > 0 && ISVIEW ? (\n                            <Grid container spacing={4}>\n                                {coinPack.data?.map((pack_info, index) => (\n                                    <Grid item lg={3} md={3} sm={6} xs={12}>\n                                        <PackCard\n                                            data={pack_info}\n                                            dataIndex={index}\n                                            handleEdit={handleUpdateModal}\n                                            handleDelete={handleDeleteDialog}\n                                            ISDELETE={ISDELETE}\n                                            ISUPDATE={ISUPDATE}\n                                        />\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        ) : (\n                            <NotFoundCard msg=\"Sorry, No data found\" />\n                        )}\n                    </Box>\n                </MainCard>\n\n                {coinPack.status === 'failed' && <AlertComponent status=\"false\" message={coinPack.msg} />}\n                {coinPack.status === 'success' && <AlertComponent status=\"true\" message={coinPack.msg} />}\n\n                <Modal title=\"Add New Coin Pack\" open={openModal} onClose={() => setOpenModal(!openModal)}>\n                    <CreateGamePack\n                        dispatch={dispatch}\n                        isMobileDevice={isMobileDevice}\n                        openModal={openModal}\n                        setOpenModal={setOpenModal}\n                        theme={theme}\n                    />\n                </Modal>\n\n                <Modal title=\"Update Coin Pack\" open={updateModal} onClose={() => setUpdateModal(!updateModal)}>\n                    <UpdateGamePack\n                        coinPack={coinPack}\n                        dispatch={dispatch}\n                        isMobileDevice={isMobileDevice}\n                        openModal={updateModal}\n                        setOpenModal={setUpdateModal}\n                        theme={theme}\n                        dataIndex={dataIdx}\n                    />\n                </Modal>\n            </Box>\n\n            {/* Delete confirmation dialog */}\n            <Box>\n                <DeleteConfirmation\n                    coinPack={coinPack}\n                    dispatch={dispatch}\n                    openDialog={openDialog}\n                    setOpenDialog={setOpenDialog}\n                    coinPackId={coinPackId}\n                />\n            </Box>\n        </>\n    );\n}\n\nexport default GamingPack;\n","import { Paper, Typography } from '@mui/material';\nimport { IconFilesOff as NoDataIcon } from '@tabler/icons';\nimport propTypes from 'prop-types';\n\nfunction NotFoundCard({ msg }) {\n    return (\n        <Paper style={{ display: 'flex', height: 60, justifyContent: 'center', alignItems: 'center' }} fullWidth>\n            <NoDataIcon />\n            <Typography style={{ fontWeight: 900, fontSize: 20 }}>{msg}</Typography>\n        </Paper>\n    );\n}\n\nNotFoundCard.propTypes = {\n    msg: propTypes.string\n};\n\nexport default NotFoundCard;\n","import { Box, Alert, Snackbar } from '@mui/material';\nimport { useEffect, useState } from 'react';\n\nfunction AlertComponent({ status, message }) {\n    const [alertStatus, setAlertStatus] = useState(false);\n    const [alertMessage, setAlertMessage] = useState('');\n    const [severity, setSeverity] = useState('error');\n\n    useEffect(() => {\n        if (status !== undefined || (status !== null && message !== undefined) || message !== null) {\n            setAlertStatus(!alertStatus);\n            setAlertMessage(message);\n            setSeverity(status === 'true' ? 'success' : 'error');\n        }\n    }, [status, message]);\n\n    return (\n        <Box>\n            <Snackbar\n                open={alertStatus}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                autoHideDuration={4000}\n                onClose={() => setAlertStatus(!alertStatus)}\n            >\n                <Alert severity={severity} style={{ backgroundColor: status === 'true' ? 'green' : 'red', color: 'white' }} id=\"alert\">\n                    {alertMessage.toString()}\n                </Alert>\n            </Snackbar>\n        </Box>\n    );\n}\n\nexport default AlertComponent;\n","import propTypes from 'prop-types';\nimport React from 'react';\nimport { Box, Typography, Dialog, AppBar, IconButton, Toolbar, Slide } from '@mui/material';\nimport { IconX as CloseIcon } from '@tabler/icons';\n\nconst Transition = (props, ref) => <Slide direction=\"up\" ref={ref} {...props} />;\nconst TransitionComponent = React.forwardRef(Transition);\n\nfunction FullScreenDialog({ title, children, dialogStatus, setDialogStatus }) {\n    return (\n        <Dialog\n            fullScreen\n            title={title}\n            open={dialogStatus}\n            TransitionComponent={TransitionComponent}\n            onClose={() => setDialogStatus(!dialogStatus)}\n        >\n            <>\n                <AppBar sx={{ position: 'relative', backgroundColor: 'white' }}>\n                    <Toolbar>\n                        <Typography sx={{ ml: 2, flex: 1 }} variant=\"h3\" color=\"#000\">\n                            {title}\n                        </Typography>\n                        <IconButton edge=\"start\" aria-label=\"close\" onClick={() => setDialogStatus(!dialogStatus)}>\n                            <CloseIcon color=\"black\" />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Box style={{ padding: 10 }}>{children}</Box>\n            </>\n        </Dialog>\n    );\n}\n\nFullScreenDialog.propTypes = {\n    title: propTypes.string,\n    children: propTypes.any,\n    dialogStatus: propTypes.bool,\n    setDialogStatus: propTypes.func\n};\n\nexport default FullScreenDialog;\n","import propTypes from 'prop-types';\nimport { Modal, IconButton, useMediaQuery, useTheme, Grid, Typography } from '@mui/material';\nimport MainCard from '../../ui-component/cards/MainCard';\nimport { IconX as CloseIcon } from '@tabler/icons';\nimport FullScreenDialog from 'components/FullScreenDialog';\nimport { BrowserView, MobileView, isIOS, isTablet, withOrientationChange } from 'react-device-detect';\n\nfunction ModalComponent({ title, children, open, onClose, isLandscape }) {\n    const theme = useTheme();\n    const isMobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n    // console.log(window.screen.orientation.angle);\n    return (\n        <>\n            {/* MOBILE VIEW / TABLET VIEW */}\n            <MobileView>\n                {/* Showing modal if device is tablet and it is in portrait mode */}\n                {isTablet && isLandscape.toString() === 'false' && (\n                    <Modal\n                        open={open}\n                        onClose={onClose}\n                        sx={{\n                            overflowY: 'auto',\n                            display: 'block',\n                            overflow: 'scroll'\n                        }}\n                    >\n                        <Grid xs={6} sm={6} md={6} lg={6}>\n                            <MainCard\n                                title={title}\n                                style={{\n                                    margin: 0,\n                                    position: 'absolute',\n                                    top: '50%',\n                                    left: '50%',\n                                    transform: 'translate(-50%, -50%)'\n                                }}\n                                secondary={\n                                    <IconButton onClick={onClose}>\n                                        <CloseIcon />\n                                    </IconButton>\n                                }\n                            >\n                                {children}\n                                <Typography>{isMobileDevice}</Typography>\n                            </MainCard>\n                        </Grid>\n                    </Modal>\n                )}\n\n                {/* Showing full screen dialog if device is tablet and in landscape mode */}\n                {isTablet && isLandscape && (\n                    <FullScreenDialog title={title} dialogStatus={open} setDialogStatus={onClose}>\n                        {children}\n                        <Typography>{isMobileDevice}</Typography>\n                    </FullScreenDialog>\n                )}\n\n                {/* Showing full screen dialog if device is mobile, mode can be portrait as well as landscape  */}\n                {!isTablet && (\n                    <FullScreenDialog title={title} dialogStatus={open} setDialogStatus={onClose}>\n                        {children}\n                        <Typography>{isMobileDevice}</Typography>\n                    </FullScreenDialog>\n                )}\n            </MobileView>\n\n            {/* BROWSER VIEW */}\n            <BrowserView>\n                {(!isIOS || !isTablet) && (\n                    <Modal\n                        open={open}\n                        onClose={onClose}\n                        sx={{\n                            overflowY: 'auto',\n                            display: 'block',\n                            overflow: 'scroll'\n                        }}\n                    >\n                        <Grid xs={6} sm={6} md={6} lg={6}>\n                            <MainCard\n                                title={title}\n                                style={{\n                                    margin: 0,\n                                    position: 'absolute',\n                                    top: '50%',\n                                    left: '50%',\n                                    transform: 'translate(-50%, -50%)'\n                                }}\n                                secondary={\n                                    <IconButton onClick={onClose}>\n                                        <CloseIcon />\n                                    </IconButton>\n                                }\n                            >\n                                {children}\n                                <Typography>{isMobileDevice}</Typography>\n                            </MainCard>\n                        </Grid>\n                    </Modal>\n                )}\n            </BrowserView>\n        </>\n    );\n}\nModalComponent.propTypes = {\n    title: propTypes.string.isRequired,\n    open: propTypes.string.isRequired,\n    onClose: propTypes.func.isRequired,\n    children: propTypes.any.isRequired\n};\n\nexport default withOrientationChange(ModalComponent);\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\n\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n\n  const {\n    className,\n    id: idProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogTitle;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContentText;","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// ==============================|| SKELETON - EARNING CARD ||============================== //\n\nconst EarningCard = () => (\n    <Card>\n        <CardContent>\n            <Grid container direction=\"column\">\n                <Grid item>\n                    <Grid container justifyContent=\"space-between\">\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" width={44} height={44} />\n                        </Grid>\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" width={34} height={34} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\n                </Grid>\n                <Grid item>\n                    <Skeleton variant=\"rectangular\" height={30} />\n                </Grid>\n            </Grid>\n        </CardContent>\n    </Card>\n);\n\nexport default EarningCard;\n"],"sourceRoot":""}