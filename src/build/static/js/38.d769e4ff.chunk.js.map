{"version":3,"sources":["views/dashboard/Default/components/cards/TotalPlayersCard.js","ui-component/cards/Skeleton/PopularCard.js","views/dashboard/Default/components/cards/PopularGamesCard.js","views/dashboard/Default/components/cards/TotalNetworkCard.js","ui-component/cards/Skeleton/TotalIncomeCard.js","views/dashboard/Default/components/cards/TotalIncomeCard.js","views/dashboard/Default/components/cards/MyProfitCard.js","views/dashboard/Default/components/cards/TopAgentsCard.js","views/dashboard/Default/components/cards/TotalActivePlayers.js","views/dashboard/Default/components/cards/TotalDepositCard.js","views/dashboard/Default/components/cards/TotalBetsCard.js","views/dashboard/Default/components/cards/TotalWinsCard.js","views/dashboard/Default/components/cards/TotalWIthdrawCard.js","views/dashboard/Default/components/cards/NetRevenueCard.js","views/dashboard/Default/components/cards/MaxWinCard.js","views/dashboard/Default/components/cards/DateCard.js","views/dashboard/Default/index.js","ui-component/cards/Skeleton/EarningCard.js"],"names":["CardWrapper","styled","MainCard","theme","backgroundColor","palette","secondary","dark","color","overflow","position","content","width","height","background","borderRadius","top","right","breakpoints","down","opacity","TotalPlayersCard","isLoading","countTotalplayer","useTheme","border","elevation","Box","sx","p","Grid","container","direction","item","justifyContent","Avatar","variant","typography","commonAvatar","largeAvatar","mt","alignItems","Typography","fontSize","fontWeight","mr","mb","PopularCard","Card","CardContent","spacing","gridSpacing","xs","zeroMinWidth","Skeleton","display","pt","PopularGamesCard","dispatch","useDispatch","agent","useSelector","state","useState","anchorEl","setAnchorEl","useEffect","getGamesList","id","alignContent","primary","cursor","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","value","gamesTypesList","length","map","GAMEGROUP_ID","GAMEGROUP_NAME","name","ggr","success","light","marginLeft","Divider","my","zIndex","TotalNetworkCard","countNetwork","TotalIncomeCard","List","py","ListItem","disableGutters","ListItemAvatar","ListItemText","warning","MyProfitCard","grey","agentsData","getAgentTypeList","agentTypesList","ROLE_ID","ROLE_NAME","ml","TotalActivePlayers","countActiveplayer","TotalDepositCard","TotalBetsCard","TotalWinsCard","NetRevenueCard","MaxWinCard","DateCard","agentType","setValue","isCustomDate","setCustomDate","handleDateChange","dateType","console","log","FormControl","fullWidth","style","marginBottom","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","onChange","newValue","renderInput","startProps","endProps","TextField","mx","sm","md","lg","TotalWIthdrawCard","Dashboard","setLoading","dashboard","getDashboardData","pageno","limit","TopAgentsCard","EarningCard"],"mappings":"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","file":"static/js/38.d769e4ff.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, Grid, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\n\n// assets\nimport { IconUsers as UsersIcon } from '@tabler/icons';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.secondary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.secondary[800],\n        borderRadius: '50%',\n        top: -85,\n        right: -95,\n        [theme.breakpoints.down('sm')]: {\n            top: -105,\n            right: -140\n        }\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.secondary[800],\n        borderRadius: '50%',\n        top: -125,\n        right: -15,\n        opacity: 0.5,\n        [theme.breakpoints.down('sm')]: {\n            top: -155,\n            right: -70\n        }\n    }\n}));\n\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\n\nconst TotalPlayersCard = ({ isLoading, countTotalplayer }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonEarningCard />\n            ) : (\n                <CardWrapper border={false} content={false} elevation={4}>\n                    <Box sx={{ p: 2.25 }}>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Grid container justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Avatar\n                                            variant=\"rounded\"\n                                            sx={{\n                                                ...theme.typography.commonAvatar,\n                                                ...theme.typography.largeAvatar,\n                                                backgroundColor: theme.palette.secondary[800],\n                                                mt: 1\n                                            }}\n                                        >\n                                            <UsersIcon color=\"#fff\" />\n                                        </Avatar>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid container alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                            {countTotalplayer ? countTotalplayer : 0}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item sx={{ mb: 1.25 }}>\n                                <Typography\n                                    sx={{\n                                        fontSize: '1rem',\n                                        fontWeight: 500,\n                                        color: theme.palette.secondary[200]\n                                    }}\n                                >\n                                    Total Players\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalPlayersCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalPlayersCard;\n","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\n\n// ==============================|| SKELETON - POPULAR CARD ||============================== //\n\nconst PopularCard = () => (\n    <Card>\n        <CardContent>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12}>\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                        <Grid item xs zeroMinWidth>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" height={20} width={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Skeleton variant=\"rectangular\" height={150} />\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>\n        <CardContent sx={{ p: 1.25, display: 'flex', pt: 0, justifyContent: 'center' }}>\n            <Skeleton variant=\"rectangular\" height={25} width={75} />\n        </CardContent>\n    </Card>\n);\n\nexport default PopularCard;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from 'store/constant';\n\n// assets\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\nimport { getGamesList } from 'store/thunk/network/agent.thunk';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst PopularGamesCard = ({ isLoading }) => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const agent = useSelector((state) => state.agent);\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const gamesData = [\n        {\n            id: 1,\n            name: 'game 1',\n            ggr: 128\n        },\n        {\n            id: 2,\n            name: 'game 2',\n            ggr: 128\n        },\n        {\n            id: 3,\n            name: 'game 3',\n            ggr: 128\n        },\n        {\n            id: 4,\n            name: 'game 4',\n            ggr: 128\n        },\n        {\n            id: 5,\n            name: 'game 5',\n            ggr: 128\n        }\n    ];\n\n    useEffect(() => {\n        dispatch(getGamesList({ id: 123 }));\n    }, []);\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard content={false}>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">Popular Games</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <MoreHorizOutlinedIcon\n                                            fontSize=\"small\"\n                                            sx={{\n                                                color: theme.palette.primary[200],\n                                                cursor: 'pointer'\n                                            }}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem value={0}>ALL</MenuItem>\n                                            {agent.gamesTypesList.length > 0 ? (\n                                                agent.gamesTypesList?.map((item) => (\n                                                    <MenuItem value={item.GAMEGROUP_ID}>{item.GAMEGROUP_NAME}</MenuItem>\n                                                ))\n                                            ) : (\n                                                <MenuItem>No Agent Type Available</MenuItem>\n                                            )}\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                {gamesData.map((value) => (\n                                    <>\n                                        <Grid container direction=\"column\">\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            {value.name}\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                            <Grid item>\n                                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                                    GGR: {value.ggr}\n                                                                </Typography>\n                                                            </Grid>\n                                                            <Grid item>\n                                                                <Avatar\n                                                                    variant=\"rounded\"\n                                                                    sx={{\n                                                                        width: 16,\n                                                                        height: 16,\n                                                                        borderRadius: '5px',\n                                                                        backgroundColor: theme.palette.success.light,\n                                                                        color: theme.palette.success.dark,\n                                                                        marginLeft: 1.875\n                                                                    }}\n                                                                >\n                                                                    <ChevronRightOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                                </Avatar>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Divider sx={{ my: 1.8 }} />\n                                    </>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    {/* <CardActions sx={{ p: 1.25, pt: 0, justifyContent: 'center' }}>\n                        <Button size=\"small\" disableElevation>\n                            View More\n                            <ChevronRightOutlinedIcon />\n                        </Button>\n                    </CardActions> */}\n                </MainCard>\n            )}\n        </>\n    );\n};\n\nPopularGamesCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default PopularGamesCard;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, Grid, Typography } from '@mui/material';\n\nimport { IconDeviceAnalytics as NetworkIcon } from '@tabler/icons';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.primary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&>div': {\n        position: 'relative',\n        zIndex: 5\n    },\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.primary[800],\n        borderRadius: '50%',\n        zIndex: 1,\n        top: -85,\n        right: -95,\n        [theme.breakpoints.down('sm')]: {\n            top: -105,\n            right: -140\n        }\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        zIndex: 1,\n        width: 210,\n        height: 210,\n        background: theme.palette.primary[800],\n        borderRadius: '50%',\n        top: -125,\n        right: -15,\n        opacity: 0.5,\n        [theme.breakpoints.down('sm')]: {\n            top: -155,\n            right: -70\n        }\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst TotalNetworkCard = ({ isLoading, countNetwork }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonTotalOrderCard />\n            ) : (\n                <CardWrapper border={false} content={false} elevation={4}>\n                    <Box sx={{ p: 2.25 }}>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Grid container justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Avatar\n                                            variant=\"rounded\"\n                                            sx={{\n                                                ...theme.typography.commonAvatar,\n                                                ...theme.typography.largeAvatar,\n                                                backgroundColor: theme.palette.primary[800],\n                                                mt: 1\n                                            }}\n                                        >\n                                            <NetworkIcon color=\"#fff\" />\n                                        </Avatar>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid container alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                            {countNetwork ? countNetwork : 0}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} sx={{ mb: 1.25 }}>\n                                <Typography\n                                    sx={{\n                                        fontSize: '1rem',\n                                        fontWeight: 500,\n                                        color: theme.palette.primary[200]\n                                    }}\n                                >\n                                    Total Network\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalNetworkCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalNetworkCard;\n","// material-ui\nimport { Card, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@mui/material';\n\n// ==============================|| SKELETON - TOTAL INCOME DARK/LIGHT CARD ||============================== //\n\nconst TotalIncomeCard = () => (\n    <Card sx={{ p: 2 }}>\n        <List sx={{ py: 0 }}>\n            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                <ListItemAvatar>\n                    <Skeleton variant=\"rectangular\" width={44} height={44} />\n                </ListItemAvatar>\n                <ListItemText\n                    sx={{ py: 0 }}\n                    primary={<Skeleton variant=\"rectangular\" height={20} />}\n                    secondary={<Skeleton variant=\"text\" />}\n                />\n            </ListItem>\n        </List>\n    </Card>\n);\n\nexport default TotalIncomeCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\nimport { IconCurrencyDollar as DollerIcon } from '@tabler/icons';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeSkeletonCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.primary.light,\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.primary[200]} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.primary[200]} -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME DARK CARD ||============================== //\n\nconst TotalIncomeCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeSkeletonCard />\n            ) : (\n                <CardWrapper border={false} content={false} elevation={4}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.primary[800],\n                                            color: '#fff'\n                                        }}\n                                    >\n                                        <DollerIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={\n                                        <Typography variant=\"h4\" sx={{ color: '#fff' }}>\n                                            $203k\n                                        </Typography>\n                                    }\n                                    secondary={\n                                        <Typography variant=\"subtitle2\" sx={{ color: 'primary.light', mt: 0.25 }}>\n                                            Total Income\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalIncomeCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\nimport { IconCurrencyDollar as DollerIcon } from '@tabler/icons';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME LIGHT CARD ||============================== //\n\nconst MyProfitCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <CardWrapper border={false} content={false} elevation={4}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.warning.light,\n                                            color: theme.palette.warning.dark\n                                        }}\n                                    >\n                                        <DollerIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={<Typography variant=\"h4\">$203k</Typography>}\n                                    secondary={\n                                        <Typography\n                                            variant=\"subtitle2\"\n                                            sx={{\n                                                color: theme.palette.grey[500],\n                                                mt: 0.5\n                                            }}\n                                        >\n                                            My Profit\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nMyProfitCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default MyProfitCard;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from 'store/constant';\n\n// assets\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAgentTypeList } from 'store/thunk/network/agent.thunk';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst agentsData = [\n    {\n        id: 1,\n        name: 'agent 1',\n        ggr: 128\n    },\n    {\n        id: 2,\n        name: 'agent 2',\n        ggr: 128\n    },\n    {\n        id: 3,\n        name: 'agent 3',\n        ggr: 128\n    },\n    {\n        id: 4,\n        name: 'agent 4',\n        ggr: 128\n    },\n    {\n        id: 5,\n        name: 'agent 5',\n        ggr: 128\n    }\n];\n\nconst PopularGamesCard = ({ isLoading }) => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const agent = useSelector((state) => state.agent);\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    useEffect(() => {\n        dispatch(getAgentTypeList());\n    }, []);\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard content={false}>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">Top Agents</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <MoreHorizOutlinedIcon\n                                            fontSize=\"small\"\n                                            sx={{\n                                                color: theme.palette.primary[200],\n                                                cursor: 'pointer'\n                                            }}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem value={0}>ALL</MenuItem>\n                                            {agent.agentTypesList.length > 0 ? (\n                                                agent.agentTypesList?.map((item) => (\n                                                    <MenuItem value={item.ROLE_ID}>{item.ROLE_NAME}</MenuItem>\n                                                ))\n                                            ) : (\n                                                <MenuItem>No Agent Type Available</MenuItem>\n                                            )}\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                {agentsData.map((agent) => (\n                                    <>\n                                        <Grid container direction=\"column\" key={agent.id}>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            {agent.name}\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                            <Grid item>\n                                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                                    GGR: {agent.ggr}\n                                                                </Typography>\n                                                            </Grid>\n                                                            <Grid item>\n                                                                <Avatar\n                                                                    variant=\"rounded\"\n                                                                    sx={{\n                                                                        width: 16,\n                                                                        height: 16,\n                                                                        borderRadius: '5px',\n                                                                        backgroundColor: theme.palette.success.light,\n                                                                        color: theme.palette.success.dark,\n                                                                        ml: 2\n                                                                    }}\n                                                                >\n                                                                    <ChevronRightOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                                </Avatar>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Divider sx={{ my: 1.8 }} />\n                                    </>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    {/* <CardActions sx={{ p: 1.25, pt: 0, justifyContent: 'center' }}>\n                        <Button size=\"small\" disableElevation>\n                            View More\n                            <ChevronRightOutlinedIcon />\n                        </Button>\n                    </CardActions> */}\n                </MainCard>\n            )}\n        </>\n    );\n};\n\nPopularGamesCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default PopularGamesCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, Grid, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\n\n// assets\nimport { IconUsers as UsersIcon } from '@tabler/icons';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.secondary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.secondary[800],\n        borderRadius: '50%',\n        top: -85,\n        right: -95,\n        [theme.breakpoints.down('sm')]: {\n            top: -105,\n            right: -140\n        }\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.secondary[800],\n        borderRadius: '50%',\n        top: -125,\n        right: -15,\n        opacity: 0.5,\n        [theme.breakpoints.down('sm')]: {\n            top: -155,\n            right: -70\n        }\n    }\n}));\n\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\n\nconst TotalActivePlayers = ({ isLoading, countActiveplayer }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonEarningCard />\n            ) : (\n                <CardWrapper border={false} content={false} elevation={4}>\n                    <Box sx={{ p: 2.25 }}>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Grid container justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Avatar\n                                            variant=\"rounded\"\n                                            sx={{\n                                                ...theme.typography.commonAvatar,\n                                                ...theme.typography.largeAvatar,\n                                                backgroundColor: theme.palette.secondary[800],\n                                                mt: 1\n                                            }}\n                                        >\n                                            <UsersIcon color=\"#fff\" />\n                                        </Avatar>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid container alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                            {countActiveplayer ? countActiveplayer : 0}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item sx={{ mb: 1.25 }}>\n                                <Typography\n                                    sx={{\n                                        fontSize: '1rem',\n                                        fontWeight: 500,\n                                        color: theme.palette.secondary[200]\n                                    }}\n                                >\n                                    Active Players\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalActivePlayers.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalActivePlayers;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\nimport { IconCurrencyDollar as DollerIcon } from '@tabler/icons';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeSkeletonCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.primary.light,\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.primary[200]} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.primary[200]} -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME DARK CARD ||============================== //\n\nconst TotalDepositCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeSkeletonCard />\n            ) : (\n                <CardWrapper border={false} content={false} elevation={4}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.primary[800],\n                                            color: '#fff'\n                                        }}\n                                    >\n                                        <DollerIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={\n                                        <Typography variant=\"h4\" sx={{ color: '#fff' }}>\n                                            $203k\n                                        </Typography>\n                                    }\n                                    secondary={\n                                        <Typography variant=\"subtitle2\" sx={{ color: 'primary.light', mt: 0.25 }}>\n                                            Deposit\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalDepositCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalDepositCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\nimport { IconCurrencyDollar as DollerIcon } from '@tabler/icons';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME LIGHT CARD ||============================== //\n\nconst TotalBetsCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <CardWrapper border={false} content={false} elevation={4}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.warning.light,\n                                            color: theme.palette.warning.dark\n                                        }}\n                                    >\n                                        <DollerIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={<Typography variant=\"h4\">$203k</Typography>}\n                                    secondary={\n                                        <Typography\n                                            variant=\"subtitle2\"\n                                            sx={{\n                                                color: theme.palette.grey[500],\n                                                mt: 0.5\n                                            }}\n                                        >\n                                            Bets\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalBetsCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalBetsCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\nimport { IconCurrencyDollar as DollerIcon } from '@tabler/icons';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeSkeletonCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.primary.light,\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.primary[200]} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.primary[200]} -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME DARK CARD ||============================== //\n\nconst TotalWinsCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeSkeletonCard />\n            ) : (\n                <CardWrapper border={false} content={false} elevation={4}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.primary[800],\n                                            color: '#fff'\n                                        }}\n                                    >\n                                        <DollerIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={\n                                        <Typography variant=\"h4\" sx={{ color: '#fff' }}>\n                                            $203k\n                                        </Typography>\n                                    }\n                                    secondary={\n                                        <Typography variant=\"subtitle2\" sx={{ color: 'primary.light', mt: 0.25 }}>\n                                            Wins\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalWinsCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalWinsCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\nimport { IconCurrencyDollar as DollerIcon } from '@tabler/icons';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME LIGHT CARD ||============================== //\n\nconst TotalBetsCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <CardWrapper border={false} content={false} elevation={4}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.warning.light,\n                                            color: theme.palette.warning.dark\n                                        }}\n                                    >\n                                        <DollerIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={<Typography variant=\"h4\">$203k</Typography>}\n                                    secondary={\n                                        <Typography\n                                            variant=\"subtitle2\"\n                                            sx={{\n                                                color: theme.palette.grey[500],\n                                                mt: 0.5\n                                            }}\n                                        >\n                                            Withdraw\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalBetsCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalBetsCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\nimport { IconCurrencyDollar as DollerIcon } from '@tabler/icons';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeSkeletonCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.primary.light,\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.primary[200]} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.primary[200]} -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME DARK CARD ||============================== //\n\nconst NetRevenueCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeSkeletonCard />\n            ) : (\n                <CardWrapper border={false} content={false} elevation={4}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.primary[800],\n                                            color: '#fff'\n                                        }}\n                                    >\n                                        <DollerIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={\n                                        <Typography variant=\"h4\" sx={{ color: '#fff' }}>\n                                            $203k\n                                        </Typography>\n                                    }\n                                    secondary={\n                                        <Typography variant=\"subtitle2\" sx={{ color: 'primary.light', mt: 0.25 }}>\n                                            Net Revenue\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nNetRevenueCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default NetRevenueCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\nimport { IconCurrencyDollar as DollerIcon } from '@tabler/icons';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME LIGHT CARD ||============================== //\n\nconst MaxWinCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <CardWrapper border={false} content={false} elevation={4}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.warning.light,\n                                            color: theme.palette.warning.dark\n                                        }}\n                                    >\n                                        <DollerIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={<Typography variant=\"h4\">$203k</Typography>}\n                                    secondary={\n                                        <Typography\n                                            variant=\"subtitle2\"\n                                            sx={{\n                                                color: theme.palette.grey[500],\n                                                mt: 0.5\n                                            }}\n                                        >\n                                            Max Win\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nMaxWinCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default MaxWinCard;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Avatar,\n    Box,\n    Button,\n    ButtonGroup,\n    CardActions,\n    CardContent,\n    Divider,\n    FormControl,\n    Grid,\n    Menu,\n    MenuItem,\n    TextField,\n    Typography\n} from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from 'store/constant';\n\n// assets\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAgentTypeList } from 'store/thunk/network/agent.thunk';\nimport { getAgentTypesWithIdList } from 'store/thunk/configuration/agentType.thunk';\nimport TotalDepositCard from './TotalDepositCard';\nimport TotalBetsCard from './TotalBetsCard';\nimport TotalWinsCard from './TotalWinsCard';\nimport TotalWIthdrawCard from './TotalWIthdrawCard';\nimport NetRevenueCard from './NetRevenueCard';\nimport MaxWinCard from './MaxWinCard';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateRangePicker from '@mui/lab/DateRangePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst DateCard = ({ isLoading }) => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const agentType = useSelector((state) => state.agentType);\n\n    const [value, setValue] = useState([null, null]);\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const [isCustomDate, setCustomDate] = useState(false);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleDateChange = (dateType) => {\n        if (dateType === 'custom') {\n            setCustomDate(true);\n        } else {\n            setCustomDate(false);\n        }\n        console.log(dateType);\n    };\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard content={false}>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">Transaction Data</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <MoreHorizOutlinedIcon\n                                            fontSize=\"small\"\n                                            sx={{\n                                                color: theme.palette.primary[200],\n                                                cursor: 'pointer'\n                                            }}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem onClick={() => handleDateChange('today')}>Today</MenuItem>\n                                            <MenuItem onClick={() => handleDateChange('month')}>Month</MenuItem>\n                                            <MenuItem onClick={() => handleDateChange('year')}>Year</MenuItem>\n                                            <Divider />\n                                            <MenuItem onClick={() => handleDateChange('custom')}>Custom</MenuItem>\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                {isCustomDate && (\n                                    <FormControl fullWidth style={{ marginBottom: 18 }}>\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                            <DateRangePicker\n                                                startText=\"Start Date\"\n                                                fullWidth\n                                                endText=\"End Date\"\n                                                value={value}\n                                                onChange={(newValue) => {\n                                                    setValue(newValue);\n                                                }}\n                                                renderInput={(startProps, endProps) => (\n                                                    <>\n                                                        <TextField {...startProps} fullWidth />\n                                                        <Box sx={{ mx: 2 }}> to </Box>\n                                                        <TextField {...endProps} fullWidth />\n                                                    </>\n                                                )}\n                                            />\n                                        </LocalizationProvider>\n                                    </FormControl>\n                                )}\n\n                                <Grid container spacing={2}>\n                                    <Grid xs={12} sm={12} md={12} lg={6} item>\n                                        <TotalDepositCard isLoading={isLoading} />\n                                    </Grid>\n                                    <Grid xs={12} sm={12} md={12} lg={6} item>\n                                        <TotalBetsCard isLoading={isLoading} />\n                                    </Grid>\n                                    <Grid xs={12} sm={12} md={12} lg={6} item>\n                                        <TotalWIthdrawCard isLoading={isLoading} />\n                                    </Grid>\n                                    <Grid xs={12} sm={12} md={12} lg={6} item>\n                                        <TotalWinsCard isLoading={isLoading} />\n                                    </Grid>\n                                    <Grid xs={12} sm={12} md={12} lg={6} item>\n                                        <NetRevenueCard isLoading={isLoading} />\n                                    </Grid>\n                                    <Grid xs={12} sm={12} md={12} lg={6} item>\n                                        <MaxWinCard isLoading={isLoading} />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </MainCard>\n            )}\n        </>\n    );\n};\n\nDateCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default DateCard;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// material-ui\nimport { Grid } from '@mui/material';\n\n// project imports\nimport TotalPlayersCard from './components/cards/TotalPlayersCard';\nimport PopularGamesCard from './components/cards/PopularGamesCard';\nimport TotalNetworkCard from './components/cards/TotalNetworkCard';\nimport TotalIncomeCard from './components/cards/TotalIncomeCard';\nimport MyProfitCard from './components/cards/MyProfitCard';\nimport TopAgentsCard from './components/cards/TopAgentsCard';\nimport { gridSpacing } from 'store/constant';\nimport TotalActivePlayers from './components/cards/TotalActivePlayers';\nimport DateCard from './components/cards/DateCard';\nimport { getDashboardData } from 'store/thunk/dashboard.thunk';\n\n// ==============================|| DEFAULT DASHBOARD ||============================== //\n\nconst Dashboard = () => {\n    const [isLoading, setLoading] = useState(true);\n    const dispatch = useDispatch();\n    const { countNetwork, countTotalplayer, countActiveplayer } = useSelector((state) => state.dashboard);\n\n    function loadInitialData() {\n        dispatch(getDashboardData({ pageno: 0, limit: 10 }));\n    }\n\n    useEffect(() => {\n        setLoading(false);\n        loadInitialData();\n    }, []);\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={3} md={4} sm={4} xs={12}>\n                        <TotalPlayersCard isLoading={isLoading} countTotalplayer={countTotalplayer} />\n                    </Grid>\n                    <Grid item lg={3} md={4} sm={4} xs={12}>\n                        <TotalNetworkCard isLoading={isLoading} countNetwork={countNetwork} />\n                    </Grid>\n                    <Grid item lg={3} md={4} sm={4} xs={12}>\n                        <TotalActivePlayers isLoading={isLoading} countActiveplayer={countActiveplayer} />\n                    </Grid>\n                    <Grid item lg={3} md={12} sm={12} xs={12}>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <TotalIncomeCard isLoading={isLoading} />\n                            </Grid>\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <MyProfitCard isLoading={isLoading} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12} md={4}>\n                        <TopAgentsCard isLoading={isLoading} />\n                    </Grid>\n\n                    <Grid item xs={12} md={4}>\n                        <DateCard isLoading={isLoading} />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <PopularGamesCard isLoading={isLoading} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// ==============================|| SKELETON - EARNING CARD ||============================== //\n\nconst EarningCard = () => (\n    <Card>\n        <CardContent>\n            <Grid container direction=\"column\">\n                <Grid item>\n                    <Grid container justifyContent=\"space-between\">\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" width={44} height={44} />\n                        </Grid>\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" width={34} height={34} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\n                </Grid>\n                <Grid item>\n                    <Skeleton variant=\"rectangular\" height={30} />\n                </Grid>\n            </Grid>\n        </CardContent>\n    </Card>\n);\n\nexport default EarningCard;\n"],"sourceRoot":""}